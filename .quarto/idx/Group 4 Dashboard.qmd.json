{"title":"USSC Dashboard","markdown":{"yaml":{"title":"USSC Dashboard","logo":"img/seal.png","format":"dashboard","theme":"custom.scss","editor":"source"},"headingText":"this line specifies options for default options for all R Chunks","containsRefs":false,"markdown":"\n\n```{r setup, warning=F, message=F, include=F}\nknitr::opts_chunk$set(echo=F)\n\n# suppress scientific notation\noptions(scipen=100)\n\n# install helper package that loads and installs other packages, if needed\nif (!require(\"pacman\")) install.packages(\"pacman\", repos = \"http://lib.stat.cmu.edu/R/CRAN/\")\n\n# install and load required packages\n# pacman should be first package in parentheses and then list others\npacman::p_load(pacman,tidyverse, magrittr, tidyquant, ggthemes, \n               RColorBrewer, highcharter, kableExtra, data.table, geomtextpath, readxl, ploty)\n\n# verify packages\n#p_loaded()\n\n\n```\n\n```{r} \n\n# Create a single dataframe of Tax sentencing counts from all CSVs\ntax_data <- list.files(\"data\", pattern = \"Sentenced_Individuals_FY.*\\\\.csv$\", full.names = TRUE) |>\n  map_dfr(\\(file) {\n    read_csv(file, show_col_types = FALSE) |>\n      rename(`TYPE OF CRIME` = 1) |>\n      filter(`TYPE OF CRIME` == \"Tax\") |>\n      select(N) |>\n      mutate(Year = str_extract(file, \"FY\\\\d{4}\") |> str_remove(\"FY\") |> as.numeric())\n  }) |>\n  arrange(Year) |>\n  mutate(N = as.numeric(N))\n\n```\n\n```{r}\n# Files for average sentence length\nfiles <- list.files(\"data\", pattern = \"sentence_lengths_\\\\d{4}\\\\.csv$\", full.names = TRUE)\n\n# Read, clean, and pull only Tax + Mean Months + Year\navg_sentence_data <- map_dfr(files, \\(file) {\n  df <- read_csv(file, show_col_types = FALSE)\n\n# Standardize column name if needed\n  if (\"TYPE OF CRIME\" %in% names(df)) {\n    df <- df |> rename(`Type of Crime` = `TYPE OF CRIME`)\n  }\n\n# Filter to Tax only and pull year\n  df |>\n    filter(`Type of Crime` == \"Tax\") |>\n    mutate(\n      Year = str_extract(file, \"\\\\d{4}\") |> as.numeric(),\n      `Mean Months` = as.numeric(`Mean Months`)\n    ) |>\n    select(Year, `Mean Months`)\n}) |>\n  arrange(Year)\n\n```\n\n# Home\n\n![](img/cover.png)\n\n# Sentencing by Crime\n\n## Row {height = 10%}\n\nTax crimes tend to receive less prison time than violent offenses but are more likely to result in probation. They rarely end with fines alone. Overall, tax offenses are treated as less dangerous but still serious, often leading to probation rather than imprisonment or just a fine.\n\nQuestion: How does the sentencing rate of tax fraud compare to other types of crimes?\n\n## Row {height = 90%}\n\n```{r}\n#| include: false\n#| warning: false\n#| message: false\n#| echo: false\ndf <- read_excel(\"data/sentence_length_by_crime_fy2024.xlsx\") |> \n  filter(`Type of Crime` != \"TOTAL\") |> \n  drop_na() |> \n  mutate(TaxFlag = ifelse(`Type of Crime` == \"Tax\", \"Tax\", \"Other\"))\n```\n\n```{r}\n#| echo: false\n#| warning: false\n#| message: false\n#| fig-height: 6\nggplot(df, aes(x = reorder(`Type of Crime`, `Mean Months`), y = `Mean Months`, fill = TaxFlag)) +\n  geom_col() +\n  coord_flip() +\n  scale_fill_manual(values = c(\"Tax\" = \"#971D2C\", \"Other\" = \"#1B375D\")) +\n  labs(title = \"Mean Sentence Length by Crime\", x = \"Crime Type\", y = \"Mean Months\") +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"none\",\n    text=element_text(family=\"serif\")\n  )\n\n```\n\n```{r}\n#| echo: false\n#| warning: false\n#| message: false\n#| fig-height: 6\nggplot(df, aes(x = reorder(`Type of Crime`, `Median Months`), y = `Median Months`, fill = TaxFlag)) +\n  geom_col() +\n  coord_flip() +\n  scale_fill_manual(values = c(\"Tax\" = \"#971D2C\", \"Other\" = \"#1B375D\")) +\n  labs(title = \"Median Sentence Length by Crime\", x = \"Crime Type\", y = \"Median Months\") +\n  theme_minimal(base_size = 14)+\n  theme(\n    legend.position = \"none\",\n    text=element_text(family=\"serif\")\n  )\n```\n\n# Prison Sentencing\n\n## Row {height = 10%}\n\nTax crimes receive much shorter sentences than most other crimes, both in average and median length. This highlights that tax offenses are generally treated as less severe than violent or high-risk crimes.\n\nQuestion: How are tax fraud charges punished compared to other types of crimes?\n\n## Row {height = 90%}\n\n```{r}\n#| include: false\n#| warning: false\n#| message: false\n#| echo: false\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(dplyr)\n\ncrime_data <- read_excel(\"data/sentence_type_by_crime_fy2024.xlsx\")\nselected_crimes <- c(\n  \"Tax\", \"Assault\", \"Robbery\", \"Sexual Abuse\", \"Fraud/Theft/Embezzlement\",\n  \"Money Laundering\", \"Drug Trafficking\", \"Drug Possession\",\n  \"Firearms\", \"Child Pornography\", \"Environmental\"\n)\n\ncrime_plot_data <- crime_data |> \n  filter(`Type of Crime` %in% selected_crimes) |> \n  rename(Crime = `Type of Crime`)\n\nplot_sentence_type <- function(column_name, title_text) {\n  ggplot(crime_plot_data, aes(x = reorder(Crime, .data[[column_name]]), y = .data[[column_name]], fill = Crime == \"Tax\")) +\n    geom_col() +\n    coord_flip() +\n    scale_fill_manual(values = c(\"TRUE\" = \"#971D2C\", \"FALSE\" = \"#1B375D\"), guide = \"none\") +\n    labs(\n      title = title_text,\n      x = \"Crime Type\",\n      y = \"Percentage (%)\"\n    ) +\n    theme_minimal(base_size = 14)+\n    theme(\n      text=element_text(family=\"serif\")\n    )\n}\n```\n\n\n```{r}\n#| echo: false\n#| warning: false\n#| message: false\n#| fig-height: 6\nplot_sentence_type(\"Prison Only (%)\", \"Prison Only Rate: Tax vs Selected Crimes\")\n\n```\n\n\n```{r}\n#| echo: false\n#| warning: false\n#| message: false\n#| fig-height: 6\nplot_sentence_type(\"Probation Only (%)\", \"Probation Only Rate: Tax vs Selected Crimes\")\n\n```\n\n```{r}\n#| echo: false\n#| warning: false\n#| message: false\n#| fig-height: 6\nplot_sentence_type(\"Fine Only (%)\", \"Fine Only Rate: Tax vs Selected Crimes\")\n```\n\n\n# Trends in Federal Tax Fraud Over Time\n\n## Row\n\nThis page provides an overview of federal tax fraud sentencing patterns in the United States from 2014 to 2024, focusing on both the number of individuals sentenced and the average length of prison sentences. Through interactive line charts, users can observe a notable decline in sentencing rates leading up to 2018, followed by fluctuations in recent years. Similarly, the average sentence length remained stable through 2017 before rising sharply in 2018 and varying slightly thereafter. These visualizations offer insight into how enforcement and sentencing practices have evolved over the past decade.\n\n## Row\n\n```{r}\n\n# Interactive line chart for Tax fraud sentencing counts\nhighchart() |>\n  hc_title(text = \"Individuals Sentenced for Tax Fraud\") |>\n  hc_xAxis(title = list(text = \"Fiscal Year\"), categories = tax_data$Year) |>\n  hc_yAxis(title = list(text = \"Number Sentenced\")) |>\n  hc_add_series(name = \"Tax Fraud Sentencings\", data = tax_data$N, type = \"line\") |>\n  hc_tooltip(pointFormat = \"Year: {point.category}<br>Sentenced: {point.y}\") |>\n  hc_colors(\"#5A708E\")\n\n```\n\n```{r}\n\n#Interactive line chart\nhighchart() |>\n  hc_title(text = \"Average Prison Sentence for Tax Fraud\") |>\n  hc_xAxis(title = list(text = \"Fiscal Year\"), categories = avg_sentence_data$Year) |>\n  hc_yAxis(title = list(text = \"Average Sentence (Months)\")) |>\n  hc_add_series(name = \"Average Sentence (Months)\", data = avg_sentence_data$`Mean Months`, type = \"line\") |>\n  hc_tooltip(pointFormat = \"Year: {point.category}<br>Avg. Sentence: {point.y} months\") |>\n  hc_colors(\"#EEB4B3\")\n\n```\n\n## Row\n\nQuestions answered from this data: \n\n- How has tax fraud sentencing rates changed overtime?\n\n- What is the average length of prison sentences for tax fruad overtime?\n\n# Sentencing by Gender and Race\n\n```{r 1, warning=F, message=F, echo=F, include=F}\nGender2014 <- read.csv(\"data/Gender 2014.csv\")\nGender2015 <- read.csv(\"data/Gender 2015.csv\")\nGender2016 <- read.csv(\"data/Gender 2016.csv\")\nGender2017 <- read.csv(\"data/Gender 2017.csv\")\nGender2018 <- read.csv(\"data/Gender 2018.csv\")\nGender2019 <- read.csv(\"data/Gender 2019.csv\")\nGender2020 <- read.csv(\"data/Gender 2020.csv\")\nGender2021 <- read.csv(\"data/Gender 2021.csv\")\nGender2022 <- read.csv(\"data/Gender 2022.csv\")\nGender2023 <- read.csv(\"data/Gender 2023.csv\")\nGender2024 <- read.csv(\"data/Gender 2024.csv\")\n\nGender2013 <- read.csv(\"data/Gender 2013.csv\")\nGender2012 <- read.csv(\"data/Gender 2012.csv\")\nGender2011 <- read.csv(\"data/Gender 2011.csv\")\nGender2010 <- read.csv(\"data/Gender 2010.csv\")\nGender2009 <- read.csv(\"data/Gender 2009.csv\")\nGender2008 <- read.csv(\"data/Gender 2008.csv\")\nGender2007 <- read.csv(\"data/Gender 2007.csv\")\n```\n\n```{r 2, warning=F, message=F, echo=F, include=F}\nRace2014 <- read.csv(\"data/Race 2014.csv\")\nRace2015 <- read.csv(\"data/Race 2015.csv\")\nRace2016 <- read.csv(\"data/Race 2016.csv\")\nRace2017 <- read.csv(\"data/Race 2017.csv\")\nRace2018 <- read.csv(\"data/Race 2018.csv\")\nRace2019 <- read.csv(\"data/Race 2019.csv\")\nRace2020 <- read.csv(\"data/Race 2020.csv\")\nRace2021 <- read.csv(\"data/Race 2021.csv\")\nRace2022 <- read.csv(\"data/Race 2022.csv\")\nRace2023 <- read.csv(\"data/Race 2023.csv\")\nRace2024 <- read.csv(\"data/Race 2024.csv\")\n\n\nRace2013 <- read.csv(\"data/Race 2013.csv\")\nRace2012 <- read.csv(\"data/Race 2012.csv\")\nRace2011 <- read.csv(\"data/Race 2011.csv\")\nRace2010 <- read.csv(\"data/Race 2010.csv\")\nRace2009 <- read.csv(\"data/Race 2009.csv\")\nRace2008 <- read.csv(\"data/Race 2008.csv\")\nRace2007 <- read.csv(\"data/Race 2007.csv\")\n\n\n```\n\n```{r 3, warning=F, message=F, echo=F, include=F}\nGender2014s <- Gender2014[20,] |> \n  mutate(year = (\"2014-12-31\"))\nGender2014s$year <- as.Date(\"2014-12-31\")\n         \nGender2015s <- Gender2015[20,] |> \n  mutate(year = \"2015-12-31\")\nGender2015s$year <- as.Date(\"2015-12-31\")\n\nGender2016s <- Gender2016[20,] |> \n  mutate(year = \"2016-12-31\")\nGender2016s$year <- as.Date(\"2016-12-31\")\n\nGender2017s <- Gender2017[20,] |> \n  mutate(year = \"2017-12-31\")\nGender2017s$year <- as.Date(\"2017-12-31\")\n\nGender2018s <- Gender2018[30,] |> \n  mutate(year = \"2018-12-31\")\nGender2018s$year <- as.Date(\"2018-12-31\")\n\nGender2019s <- Gender2019[30,] |> \n  mutate(year = \"2019-12-31\")\nGender2019s$year <- as.Date(\"2019-12-31\")\n\nGender2020s <- Gender2020[30,] |> \n  mutate(year = \"2020-12-31\")\nGender2020s$year <- as.Date(\"2020-12-31\")\n\nGender2021s <- Gender2021[30,] |> \n  mutate(year = \"2021-12-31\")\nGender2021s$year <- as.Date(\"2021-12-31\")\n\nGender2022s <- Gender2022[30,] |> \n  mutate(year = \"2022-12-31\")\nGender2022s$year <- as.Date(\"2022-12-31\")\n\nGender2023s <- Gender2023[30,] |> \n  mutate(year = \"2023-12-31\")\nGender2023s$year <- as.Date(\"2023-12-31\")\n\nGender2024s <- Gender2024[30,] |> \n  mutate(year = \"2024-12-31\")\nGender2024s$year <- as.Date(\"2024-12-31\")\n\n\n\nGender2013s <- Gender2013[19,] |> \n  mutate(year = \"2013-12-31\")\nGender2013s$year <- as.Date(\"2013-12-31\")\n\nGender2012s <- Gender2012[20,] |> \n  mutate(year = \"2012-12-31\") |> \n  rename(MALE_N = Male.N, FEMALE_N = Female.N)\nGender2012s$year <- as.Date(\"2012-12-31\") \n\nGender2011s <- Gender2011[19,] |> \n  mutate(year = \"2011-12-31\") |> \n  rename(MALE_N = MALE.N, FEMALE_N = FEMALE.N)\nGender2011s$year <- as.Date(\"2011-12-31\")\n\nGender2010s <- Gender2010[19,] |> \n  mutate(year = \"2010-12-31\") |> \n  rename(MALE_N = Male.N, FEMALE_N = Female.N)\nGender2010s$year <- as.Date(\"2010-12-31\")\n\nGender2009s <- Gender2009[19,] |> \n  mutate(year = \"2009-12-31\") |> \n  rename(MALE_N = Male.N, FEMALE_N = Female.N)\nGender2009s$year <- as.Date(\"2009-12-31\")\n\nGender2008s <- Gender2008[20,] |> \n  mutate(year = \"2008-12-31\")\nGender2008s$year <- as.Date(\"2008-12-31\")\n\nGender2007s <- Gender2007[19,] |> \n  mutate(year = \"2007-12-31\") |> \n  rename(MALE_N = MALE.N, FEMALE_N = FEMALE.N)\nGender2007s$year <- as.Date(\"2007-12-31\")\n\n\nGenderTF <- Gender2014s |> \n  full_join(Gender2015s) |> \n  full_join(Gender2017s) |> \n  full_join(Gender2016s) |> \n  full_join(Gender2018s) |> \n  full_join(Gender2019s) |> \n  full_join(Gender2020s) |> \n  full_join(Gender2021s) |> \n  full_join(Gender2022s) |> \n  full_join(Gender2023s) |> \n  full_join(Gender2024s) |> \n  full_join(Gender2013s) |> \n  full_join(Gender2012s) |> \n  full_join(Gender2011s) |> \n  full_join(Gender2010s) |> \n  full_join(Gender2009s) |> \n  full_join(Gender2008s) |> \n  full_join(Gender2007s)\n  \n\nGenderTF <- GenderTF |> \n  select(2:7) |> \n  mutate(Type_of_crime = \"Tax\")\n\nGender.xts <- xts(x = GenderTF[,c(2,4)], order.by = GenderTF$year)\n\n```\n\n```{r 4, warning=F, message=F, echo=F, include=F}\nRace2007s <- Race2007[20,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2007-12-31\")) |> \n  rename(White_N = White.N, \n         Black_N = Black.N, \n         Hispanic_N = Hispanic.N, \n         Other_N = Other.N)\n\nRace2008s <- Race2008[20,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2008-12-31\")) |> \n  rename(White_N = White.N, \n         Black_N = Black.N, \n         Hispanic_N = Hispanic.N, \n         Other_N = Other.N)\n\nRace2009s <- Race2009[20,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2009-12-31\")) |> \n  rename(White_N = White.N, \n         Black_N = Black.N, \n         Hispanic_N = Hispanic.N, \n         Other_N = Other.N)\n\nRace2010s <- Race2010[20,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2010-12-31\")) |> \n  rename(White_N = White.N, \n         Black_N = Black.N, \n         Hispanic_N = Hispanic.N, \n         Other_N = Other.N)\n\nRace2011s <- Race2011[20,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2011-12-31\")) |> \n  rename(White_N = White.N, \n         Black_N = Black.N, \n         Hispanic_N = Hispanic.N, \n         Other_N = Other.N)\n  \nRace2012s <- Race2012[19,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2012-12-31\")) |> \n  rename(White_N = White.N, \n         Black_N = Black.N, \n         Hispanic_N = Hispanic.N, \n         Other_N = Other.N)\n\nRace2013s <- Race2013[20,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2013-12-31\")) |> \n  rename(White_N = White.N, \n         Black_N = Black.N, \n         Hispanic_N = Hispanic.N, \n         Other_N = Other.N)\n\nRace2014s <- Race2014[20,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2014-12-31\")) |> \n  rename(White_N = WHITE_N, \n         Black_N = BLACK_N, \n         Hispanic_N = HISPANIC_N, \n         Other_N = OTHER_N)\n\nRace2015s <- Race2015[19,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2015-12-31\")) |> \n  rename(White_N = WHITE_N, \n         Black_N = BLACK_N, \n         Hispanic_N = HISPANIC_N, \n         Other_N = OTHER_N)\n\nRace2016s <- Race2016[19,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2016-12-31\")) |> \n  rename(White_N = WHITE.N, \n         Black_N = BLACK.N, \n         Hispanic_N = HISPANIC.N, \n         Other_N = OTHER.N)\n\nRace2017s <- Race2017[20,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2017-12-31\")) |> \n  rename(White_N = WHITE.N, \n         Black_N = BLACK.N, \n         Hispanic_N = HISPANIC.N, \n         Other_N = OTHER.N)\n\nRace2018s <- Race2018[30,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2018-12-31\")) |> \n  rename(White_N = WHITE_N, \n         Black_N = BLACK_N, \n         Hispanic_N = HISPANIC_N, \n         Other_N = OTHER_N)\n\nRace2019s <- Race2019[30,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2019-12-31\")) |> \n  rename(White_N = WHITE_N, \n         Black_N = BLACK_N, \n         Hispanic_N = HISPANIC_N, \n         Other_N = OTHER_N)\n\nRace2020s <- Race2020[30,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2020-12-31\")) |> \n  rename(White_N = WHITE_N, \n         Black_N = BLACK_N, \n         Hispanic_N = HISPANIC_N, \n         Other_N = OTHER_N)\n\nRace2021s <- Race2021[30,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2021-12-31\")) |> \n  rename(White_N = WHITE_N, \n         Black_N = BLACK_N, \n         Hispanic_N = HISPANIC_N, \n         Other_N = OTHER_N)\n\nRace2022s <- Race2022[30,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2022-12-31\")) |> \n  rename(White_N = WHITE_N, \n         Black_N = BLACK_N, \n         Hispanic_N = HISPANIC_N, \n         Other_N = OTHER_N)\n\nRace2023s <- Race2023[30,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2023-12-31\")) |> \n  rename(White_N = WHITE_N, \n         Black_N = BLACK_N, \n         Hispanic_N = HISPANIC_N, \n         Other_N = OTHER_N)\n\nRace2024s <- Race2024[30,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2024-12-31\")) |> \n  rename(White_N = WHITE_N, \n         Black_N = BLACK_N, \n         Hispanic_N = HISPANIC_N, \n         Other_N = OTHER_N)\n\nRaceTF <- Race2007s |> \n  full_join(Race2008s) |> \n  full_join(Race2009s) |> \n  full_join(Race2010s) |> \n  full_join(Race2011s) |> \n  full_join(Race2012s) |> \n  full_join(Race2013s) |> \n  full_join(Race2014s) |> \n  full_join(Race2015s) |> \n  full_join(Race2016s) |> \n  full_join(Race2017s) |> \n  full_join(Race2018s) |> \n  full_join(Race2019s) |> \n  full_join(Race2020s) |> \n  full_join(Race2021s) |> \n  full_join(Race2022s) |> \n  full_join(Race2023s) |> \n  full_join(Race2024s)\n\nRaceTF <- RaceTF |> \n  select(2:6) |> \n  mutate(Type_of_crime = \"Tax\")\n\nRace.xts <- xts(x = RaceTF[,c(1:4)], order.by = RaceTF$Year) \n  \nnum_highest <- max(RaceTF$White_N)\nnum_highestg <- max(GenderTF$MALE_N)\n\n```\n\n## Row {height=\"15%\"}\n\nThis page provides an overview of tax fraud trends by gender and race from 2007 to 2024 by using interactive Highchart plots. The data reveals a significant gender disparity, with male cases consistently outnumbering female cases. Racially, white individuals historically show the highest numbers, though cases among Black and Hispanic individuals have increased in recent years. The number of men sentenced was the largest, reaching `r num_highest`. Among the races, the number of white people was the largest, reaching `r num_highestg`.Data from [United States Sentencing Commision](https://www.ussc.gov/research/data-reports/quarter/quarterly-sentencing-updates).\n\nQuestion: How have gender and racial disparities in tax fraud convictions evolved in the United States from 2007 to 2024?\n\n## Row {height=\"55%\"}\n\n```{r 5, warning=F, message=F, echo=F}\n\n(GenderHc <- hchart(Gender.xts$MALE_N, name = \"Male\", color = \"#1B375D\") |> \n  hc_add_series(Gender.xts$FEMALE_N, name = \"Female\", color = \"#971D2C\"))\n\n```\n\n```{r 6, warning=F, message=F, echo=F}\n\n(RaceHc <- hchart(Race.xts$White_N, name = \"White\", color = \"#971D2C\") |> \n  hc_add_series(Race.xts$Black_N, name = \"Balck\", color = \"#1B375D\") |> \n  hc_add_series(Race.xts$Hispanic_N, name = \"Hispanic\", color = \"#5A708E\") |> \n  hc_add_series(Race.xts$Other_N, name = \"Other\", color = \"#EEB4B3\"))\n```\n\n\n## Row {Height=\"30%\"}\n\n```{r}\nGenderKable <- GenderTF |> \n  mutate(Year = year) |> \n  select(Year,MALE_N,FEMALE_N) |> \n  rename(\"Male Number\" = \"MALE_N\", \"Female number\" = \"FEMALE_N\")\n\nkable(GenderKable) |> kable_styling(full_width = F)\n```\n\n```{r}\nRaceKable <- RaceTF |> \n  select(Year, White_N, Black_N, Hispanic_N, Other_N) |> \n  rename(\"White Number\" = \"White_N\", \n         \"Black Number\" = \"Black_N\",\n         \"Hispanic Number\" = \"Hispanic_N\",\n         \"Other Number\" = \"Other_N\")\n\nkable(RaceKable) |> kable_styling(full_width = F)\n```\n\n# Sentencing by State\n\n## Row\n\n### Column {width=\"70%\"}\n\n```{r}\n\n# install.packages(\"plotly\")\nlibrary(plotly)\n\n# Load your data\nstate_data <- read_csv(\"data/state_sentence.csv\")\n\n# Add abbreviations\nstate_data <- state_data %>%\n  mutate(state_abbr = state.abb[match(state, state.name)])\n\n# Plot with bright, reversed \"Blues\" scale (light = low, dark = high)\nplot_geo(state_data, locationmode = 'USA-states') %>%\n  add_trace(\n    locations = ~state_abbr,\n    z = ~num_tax_sentence,\n    text = ~paste(state_abbr, \"<br>Tax Sentences:\", num_tax_sentence),\n    colorscale = \"Blues\",  # Clean, bright gradient\n    reversescale = TRUE,   # Makes higher values darker blue\n    colorbar = list(title = \"Tax Sentences\"),\n    type = 'choropleth',\n    zmin = min(state_data$num_tax_sentence, na.rm = TRUE),\n    zmax = max(state_data$num_tax_sentence, na.rm = TRUE)\n  ) %>%\n  layout(\n  geo = list(scope = 'usa'),\n  title = list(\n    text = paste0(\n      \"Number of Tax Sentence by Different States 2024\"\n    ),\n    x = 0.5,\n    xanchor = \"center\",\n    y= 0.9\n  ),\n  annotations = list(\n    list(\n      text = \"Data Source: https://www.ussc.gov/research/data-reports/geography/2024-federal-sentencing-statistics\",\n      xref = \"paper\", yref = \"paper\",\n      x = 0, y = 0,\n      showarrow = FALSE,\n      font = list(size = 11, color = \"gray\")\n    )\n  )\n)\n\n```\n\n\n### Column {width=\"30%\"}\n\n#### Row\n\nIn 2024, federal tax sentences were most concentrated in high-population states like New York, California, Texas, and Florida. Less populated states, especially in the Midwest and Mountain West, saw few or no cases. The distribution suggests that tax enforcement aligns closely with economic activity and population density.\n\nQuestion: What states earn the highest number of convictions of tax fraud?\n\n#### Row\n```{r}\nfull_state <- state_data |>\n  select(state, num_tax_sentence)\n  \nkable(full_state) |> kable_styling(full_width = F) \n```\n\n#### Row\n\nInformation on [2024 Federal Sentencing Statistics](https://www.ussc.gov/research/data-reports/geography/2024-federal-sentencing-statistics)\n\n# Sentencing by Region/Age/Education\n\n## Row {height=75%}\n\n```{r Data Management for Page X, Graph 1}\nopafy23 <- fread(\"data/CSV1.csv\") |> \n  filter(OFFGUIDE == 16 | OFFGUIDE == 29, LOSS1 != 9999999997)|> \n  mutate(SENTYEARS = SENTTCAP / 12,\n         districtF = factor(DISTRICT,\n                            levels <- c(\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"61\", \"62\", \"63\", \"64\", \"65\", \"66\", \"67\", \"68\", \"69\", \"70\", \"71\", \"72\", \"73\", \"74\", \"75\", \"76\", \"77\", \"78\", \"79\", \"80\", \"81\", \"82\", \"83\", \"84\", \"85\", \"86\", \"87\", \"88\", \"89\", \"90\", \"91\", \"93\", \"94\", \"95\", \"96\"),\n                            labels <- c(\"ME\", \"MA\", \"NH\", \"RI\", \"PR\", \"CT\", \"NY N\", \n                      \"NY E\", \"NY S\", \"NY W\", \"VT\", \"DE\", \"NJ\", \"PA E\", \n                      \"PA M\", \"PA W\", \"MD\", \"NC E\", \"NC M\", \"NC W\", \n                      \"SC\", \"VA E\", \"VA W\", \"WV N\", \"WV S\", \n                      \"AL N\", \"AL M\", \"AL S\", \"FL N\", \"FL M\", \"FL S\", \n                      \"GA N\", \"GA M\", \"GA S\", \"LA E\", \"LA W\", \"MS N\", \n                      \"MS S\", \"TX N\", \"TX E\", \"TX S\", \"TX W\", \"KY E\", \n                      \"KY W\", \"MI E\", \"MI W\", \"OH N\", \"OH S\", \"TN E\", \n                      \"TN M\", \"TN W\", \"IL N\", \"IL C\", \"IL S\", \"IN N\", \n                      \"IN S\", \"WI E\", \"WI W\", \"AR E\", \"AR W\", \"IA N\", \n                      \"IA S\", \"MN\", \"MO E\", \"MO W\", \"NE\", \"ND\", \"SD\", \n                      \"AZ\", \"CA N\", \"CA E\", \"CA C\", \"CA S\", \"HI\", \n                      \"ID\", \"MT\", \"NV\", \"OR\", \"WA E\", \"WA W\", \"CO\", \"KS\", \n                      \"NM\", \"OK N\", \"OK E\", \"OK W\", \"UT\", \"WY\", \"DC\", \n                      \"VI\", \"GU\", \"MP\", \"AK\", \"LA M\"))\n         ) |> \n  group_by(districtF, DISTRICT)|> \n  summarise(average_sentence = mean(SENTYEARS, na.rm=T),\n            average_loss = mean(LOSS1, na.rm=T)\n  ) |> \n  ungroup()|> \n  mutate(\n    REGION = case_when(\n          # Northeast\n          districtF %in% c(\"ME\", \"MA\", \"NH\", \"RI\", \"CT\", \"NY N\", \"NY E\", \"NY S\", \"NY W\", \"VT\", \"NJ\", \"PA E\", \"PA M\", \"PA W\") ~ \"Northeast\",\n          # Midwest\n          districtF %in% c(\"OH N\", \"OH S\", \"MI E\", \"MI W\", \"IN N\", \"IN S\", \"IL N\", \"IL C\", \"IL S\", \"WI E\", \"WI W\", \"MN\", \"IA N\", \"IA S\", \"MO E\", \"MO W\", \"ND\", \"SD\", \"NE\", \"KS\") ~ \"Midwest\",\n          # West\n          districtF %in% c(\"MT\", \"ID\", \"WY\", \"CO\", \"UT\", \"NM\", \"AZ\", \"NV\") ~ \"West\",\n          # South\n          districtF %in% c(\"DE\", \"MD\", \"DC\", \"VA E\", \"VA W\", \"WV N\", \"WV S\", \"NC E\", \"NC M\", \"NC W\", \"SC\", \"GA N\", \"GA M\", \"GA S\", \"FL N\", \"FL M\", \"FL S\", \"AL N\", \"AL M\", \"AL S\", \"MS N\", \"MS S\", \"LA E\", \"LA W\", \"LA M\", \"TX N\", \"TX E\", \"TX S\", \"TX W\", \"AR E\", \"AR W\", \"OK N\", \"OK E\", \"OK W\", \"KY E\", \"KY W\", \"TN E\", \"TN M\", \"TN W\") ~ \"South\",\n          # Pacific\n          districtF %in% c(\"CA N\", \"CA E\", \"CA C\", \"CA S\", \"HI\", \"WA E\", \"WA W\", \"OR\", \"AK\") ~ \"Pacific\",\n          #Caribbean\n          districtF %in% c(\"PR\", \"GU\")~\"Caribbean\"),\n    REGIONF = factor(REGION)\n  ) |> \n  arrange(REGION, desc(average_sentence)) |> \n  slice(1:50) |> \n  mutate(\n    id=seq(1:50)\n  )\n\n\n\n\n\nempty_bar <- 4\nto_add <- data.frame( matrix(NA, empty_bar*nlevels(opafy23$REGIONF), ncol(opafy23)) )\ncolnames(to_add) <- colnames(opafy23)\nto_add$REGIONF <- rep(levels(opafy23$REGIONF), each=empty_bar)\nopafy23 <- rbind(opafy23, to_add)\n\nextra_end <- data.frame(matrix(NA, 3, ncol(opafy23)))\ncolnames(extra_end) <- colnames(opafy23)\nextra_end$REGIONF <- \"Caribbean\"\n\nopafy23 <- rbind(opafy23, extra_end)\n\nopafy23 <- opafy23 |>  arrange(REGIONF)\nopafy23$id <- seq(1, nrow(opafy23))\nopafy23 <- opafy23|> \n  slice(1:73)\n\n\n\n\nlabel_opafy23 <- opafy23\nnumber_of_bar <- nrow(label_opafy23)\nangle <-  90 - 360 * (label_opafy23$id-0.5) /number_of_bar\nlabel_opafy23$hjust <-ifelse(angle < -90, 1, 0)\nlabel_opafy23$angle <-ifelse(angle < -90, angle+180, angle)\n\n\n\n\nbase_opafy23 <- opafy23 |>  \n  group_by(REGIONF)|> \n  summarize(start=min(id)-2, end=max(id) - 4) |> \n  rowwise() |> \n  mutate(title=mean(c(start, end)))\n\nanglesgroup <- data.frame(REGIONF = c(\"Caribbean\", \"Midwest\", \"Northeast\",\"Pacific\", \"South\"),\n                          angle = c(85+270, 13.56+270, -78+90, 37+270, -30+90))\n\nbase_opafy23 <- base_opafy23 |> \n  right_join(anglesgroup, by = \"REGIONF\")\n\n\n\n\ngrid_data <- base_opafy23\ngrid_data$end <- grid_data$end[ c( nrow(grid_data), 1:nrow(grid_data)-1)] + 1\ngrid_data$start <- grid_data$start - 1\ngrid_data <- grid_data[-1,]\n\n\n\n\n\nplot <- ggplot(opafy23, aes(x=id, y=average_sentence, fill=REGIONF))+\n  geom_bar(stat=\"identity\")+\n  geom_segment(data=grid_data, aes(x = end, y = 9, xend = start, yend = 9), colour = \"black\", alpha=1, size=0.3 , inherit.aes = FALSE )+\n  geom_segment(data=grid_data, aes(x = end, y = 6, xend = start, yend = 6), colour = \"black\", alpha=1, size=0.3 , inherit.aes = FALSE )+\n  geom_segment(data=grid_data, aes(x = end, y = 3, xend = start, yend = 3), colour = \"black\", alpha=1, size=0.3 , inherit.aes = FALSE )+\n  annotate(\"text\", x = rep(min(opafy23$id)+3,3), y = c(3, 6, 9), label = c(\"3\", \"6\", \"9\") , color=\"black\", size=3 , angle=20, fontface=\"plain\", hjust=1) +\n  ylim(-10,12)+\n  coord_polar(start=0)+\n  geom_text(data=label_opafy23, aes(x=id, y=average_sentence+1, label=districtF, hjust=hjust), color=\"black\", fontface=\"bold\",alpha=0.6, size=1.8, angle= label_opafy23$angle, inherit.aes = FALSE )+\n  geom_text(data=base_opafy23, aes(x = title, y = -2.5, label=REGIONF), fontface=\"bold\", hjust=c(0.6,0.5,0.4,0.4,0.4), colour = \"black\", alpha=0.8, size=1.5, angle = base_opafy23$angle, fontface=\"bold\", inherit.aes = FALSE)+\n  #geom_textsegment(data=base_opafy23, aes(x= start, y =-2, xend =end, yend = -2, label = REGIONF), colour=\"black\", alpha=0.8, linewidth=0.6, size=2, inherit.aes=FALSE)+\n  geom_segment(data=base_opafy23, aes(x = start, y = -1, xend = end, yend = -1), colour = \"black\", alpha=0.8, linewidth=0.6 , inherit.aes = FALSE )+\n  labs(\n    title=\"Average Sentence of Tax Fraud by District/Region\",\n    subtitle=\"Data From Top 50 Districts by Max Sentence\"\n  )+\n  scale_fill_manual(values=c(\"#1b375d\", \"#5A708E\",\"#EEB4B3\", \"#971D2C\", \"#701C2B\"))+\n  theme_void(12)+\n  theme(\n    axis.text = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),      # Adjust the margin to make in sort labels are not truncated!\n    text=element_text(family=\"serif\"),\n    axis.ticks.y = element_blank(),\n    legend.position = \"none\"\n  ) \n \n\nplot\n```\n\n```{r Data Management for Page X, Graph 2}\noopafy23 <- fread(\"data/CSV2.csv\") |> \n  filter(OFFGUIDE == 16 | OFFGUIDE == 29, LOSS1 != 9999999997)|> \n  mutate(SENTYEARS = SENTTCAP / 12,\n         Agebin = factor(YEARS,\n                            levels <- c(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\",\"7\"),\n                            labels <- c(\"<21\",\"21-25\",\"26-30\",\"31-35\",\"36-40\",\"41-50\",\">50\")),\n         Education = factor(NEWEDUC,\n                            levels <- c(\"1\",\"3\",\"5\",\"6\"),\n                            labels <- c(\"Less Than H.S.\", \"H.S. Graduate\",\"Some College\",\"College Grad\"))\n         ) |>\n  group_by(Agebin, Education) |> \n  summarise(count = n(),\n            average_sentence = mean(SENTYEARS, na.rm=T),\n            average_loss = mean(LOSS1, na.rm=T)) |> \n  ungroup() |> \n  arrange(Education, desc(average_sentence)) |> \n  mutate(\n    id=seq(1:24)\n  )\neduc_group <- oopafy23 |> \n  arrange(desc(average_sentence))\n\neduc <- educ_group[[1,2]]\n\n\n\nempty_bar <- 3\nloss_to_add <- data.frame( matrix(NA, empty_bar*nlevels(oopafy23$Education), ncol(oopafy23)) )\ncolnames(loss_to_add) <- colnames(oopafy23)\nloss_to_add$Education <- rep(levels(oopafy23$Education), each=empty_bar)\noopafy23 <- rbind(oopafy23, loss_to_add)\n\n# extra_end <- data.frame(matrix(NA, 3, ncol(oopafy23)))\n# colnames(extra_end) <- colnames(oopafy23)\n# extra_end$Education <- \"Less Than H.S.\"\n# \n# oopafy23 <- rbind(oopafy23, extra_end)\n\noopafy23 <- oopafy23 |>  arrange(Education)\noopafy23$id <- seq(1, nrow(oopafy23))\n# oopafy23 <- oopafy23 |> \n#   slice(1:53)\n\n\n\n\n\nlabel_oopafy23 <- oopafy23\nonumber_of_bar <- nrow(label_oopafy23)\noangle <-  90 - 360 * (label_oopafy23$id-0.5) /onumber_of_bar\nlabel_oopafy23$hjust <-ifelse(oangle < -90, 1, 0)\nlabel_oopafy23$oangle <-ifelse(oangle < -90, oangle+180, oangle)\n\n\n\n\nbase_oopafy23 <- oopafy23 |>  \n  group_by(Education)|> \n  summarize(start=min(id), end=max(id)-3) |> \n  rowwise() |> \n  mutate(title=mean(c(start, end)))\n\noanglesgroup <- data.frame(Education = c(\"Less Than H.S.\", \"H.S. Graduate\", \"Some College\",\"College Grad\"),\n                          oangle = c(55+270, -40+90, 50-90, -35+90))\n\nbase_oopafy23 <- base_oopafy23 |> \n   right_join(oanglesgroup, by = \"Education\")\n\n\n\n\n\nogrid_data <- base_oopafy23\nogrid_data$end <- ogrid_data$end[ c( nrow(ogrid_data), 1:nrow(ogrid_data)-1)] +1\nogrid_data$start <- ogrid_data$start-1\n# ogrid_data[1,2] = -5\n# ogrid_data[1,3] = -2\nogrid_data <- ogrid_data[-1,]\n\n\n\n\nplot <- ggplot(oopafy23, aes(x=id, y=average_sentence, fill=Education))+\n  geom_bar(stat=\"identity\")+\n  geom_segment(data=ogrid_data, aes(x = end, y = 6, xend = start, yend = 6), colour = \"black\", alpha=1, size=0. , inherit.aes = FALSE )+\n  geom_segment(data=ogrid_data, aes(x = end, y = 4, xend = start, yend = 4), colour = \"black\", alpha=1, size=0.3 , inherit.aes = FALSE )+\n  geom_segment(data=ogrid_data, aes(x = end, y = 2, xend = start, yend = 2), colour = \"black\", alpha=1, size=0.3 , inherit.aes = FALSE )+\n  annotate(\"text\", x = rep(min(oopafy23$id)-1,3), y = c(2, 4, 6), label = c(\"2\", \"4\", \"6\") , color=\"black\", size=3, fontface=\"plain\", hjust=1) +\n  geom_bar(stat=\"identity\")+\n  ylim(-7, 8)+\n  coord_polar(start=0)+\n  geom_text(data=label_oopafy23, aes(x=id, y=average_sentence+.5, label=Agebin, hjust=hjust), color=\"black\", fontface=\"bold\",alpha=0.6, size=1.8, angle= label_oopafy23$oangle, inherit.aes = FALSE )+\n  geom_textsegment(data=base_oopafy23, aes(x= start, y =-1, xend =end, yend = -1, label = Education), colour=\"black\", alpha=0.8, linewidth=0, size=2, inherit.aes=FALSE)+\n # geom_segment(data=base_oopafy23, aes(x = start, y = -.5, xend = end, yend = -.5), colour = \"black\", alpha=0.8, linewidth=0.6 , inherit.aes = FALSE)+\n  labs(\n    title=\"Average Sentence of Tax Fraud by Age\",\n    subtitle=\"Grouped by Amount of Education\"\n  )+\n  scale_fill_manual(values=c(\"#1b375d\", \"#5A708E\",\"#EEB4B3\", \"#971D2C\"))+\n  theme_void(12)+\n  theme(\n    axis.text = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),      # Adjust the margin to make in sort labels are not truncated!\n    text=element_text(family=\"serif\"),\n    axis.ticks.y = element_blank(),\n    legend.position=\"none\"\n  ) \n \n#angle = base_oopafy23$oangle\n# (data=base_oopafy23, aes(x = title, y = -1.8, label=Education), fontface=\"bold\", hjust=c(0.5,0.5,0.5,0.5), colour = \"black\", alpha=0.8, # size=2, fontface=\"plain\", inherit.aes = FALSE)\nplot\n```\n\n## Row {height=25%}\n\n### Column\n\nThe length of sentence isn't necessarily correlated by district median income. East Washington and Connecticut had the greatest average sentence. For further analysis, average sentence should take population of districts into account. \n\nQuestion: What district in the U.S. gets most heavily sentenced?\n\n### Column\n\nThe longest sentence is held by individuals with `r educ` education, between the ages of 31-35. Among sentenced individuals who graduated college, the longest sentence is held by the age group 26-30, likely right out of college. \n\nQuestion: What age group has, on average, the greatest sentence for tax fraud? What is this group's education?\n\n# Criminal Investigation by Status or Disposition\n\n## Row {height = 10%}\n\nThis page focuses on data from the SOI Tax Stats – Criminal Investigation Program, by Status or Disposition from 2010 to 2023. The first waffle chart displays raw counts, showing the total number of IRS CI actions over time. This shows the true volume and scale of enforcement activity to show which years had more investigative or prosecutorial effort. The second waffle chart presents percent-of-year data that compares the proportion of each case disposition within a given year. This shows shifts in the types of actions pursued, such as increases in incarcerations or declines in prosecutions, regardless of overall volume.\n\nQuestion: How has conviction, incarceration, or prosecution rates from the IRS changed over time?\n\n## Row {height = 75%}\n\n```{r}\nfile_paths <- list(\n  \"2010\" = \"data/data/10db18ci.xls\",\n  \"2011\" = \"data/data/11db18ci.xls\",\n  \"2012\" = \"data/data/12db18ci.xls\",\n  \"2013\" = \"data/data/13db18ci.xls\",\n  \"2014\" = \"data/data/14db18ci.xls\",\n  \"2015\" = \"data/data/15db18ci.xls\",\n  \"2016\" = \"data/data/16db18aci.xls\",\n  \"2017\" = \"data/data/17db18ci.xls\",\n  \"2018\" = \"data/data/18db18ci.xls\",\n  \"2019\" = \"data/data/19dbs03t24ci.xlsx\",\n  \"2020\" = \"data/data/20dbs03t24ci.xlsx\",\n  \"2021\" = \"data/data/21dbs03t24ci.xlsx\",\n  \"2022\" = \"data/data/22dbs03t24ci.xlsx\",\n  \"2023\" = \"data/data/23dbs03t26ci.xlsx\"\n)\n\n\ntarget_rows <- c(\n  \"investigations initiated\",\n  \"investigations completed\",\n  \"referrals for prosecution\",\n  \"indictments and informations\",\n  \"convictions\",\n  \"sentenced\",\n  \"incarcerated\",\n  \"percentage of those sentenced who were incarcerated\"\n)\n\nclean_colnames <- c(\n  \"Status or disposition\", \n  \"Total\", \n  \"Legal source tax crimes\", \n  \"Illegal source financial crimes\", \n  \"Narcotics-related financial crimes\"\n)\n\nread_and_clean_file <- function(path, year) {\n  tryCatch({\n    df <- read_excel(path, skip = 2, col_names = FALSE)\n\ndf <- df %>%\n  mutate(row_key = str_squish(str_replace_all(tolower(as.character(...1)), \"[\\r\\n]\", \" \"))) %>%\n  filter(str_detect(row_key, paste0(\"\\\\b(\", paste(target_rows, collapse = \"|\"), \")\\\\b\"))) %>%\n  select(1:5) %>%\n  mutate(across(everything(), as.character)) %>%\n  mutate(\n    `Status or disposition` = str_trim(gsub(\"\\\\[.*?\\\\]\", \"\", ...1)),\n    `Total` = ...2,\n    `Legal source tax crimes` = ...3,\n    `Illegal source financial crimes` = ...4,\n    `Narcotics-related financial crimes` = ...5) %>%\n  select(all_of(clean_colnames)) %>%\n  mutate(across(-`Status or disposition`, ~ as.numeric(gsub(\",\", \"\", .))),\n         Year = as.integer(year)) %>%\n  filter(if_any(c(\"Total\", \n                  \"Legal source tax crimes\", \n                  \"Illegal source financial crimes\", \n                  \"Narcotics-related financial crimes\"), ~ !is.na(.)))}, \nerror = function(e) {\n  message(paste(\"Skipping file:\", path, \"| Error:\", e$message))\n  return(NULL)\n  })\n}\n\nci_data <- imap_dfr(file_paths, read_and_clean_file)\n\nwrite.csv(ci_data, \"data/combined_CI_2010_2023.csv\", row.names = FALSE)\n```\n\n```{r}\n#| fig.width: 12\n#| fig.asp: 0.9\n\nplot_data <- ci_data %>%\n  filter(!is.na(Year)) %>%\n  mutate(`Status or disposition` = case_when(\n    str_detect(`Status or disposition`, regex(\"indictments?\\\\s+and\\\\s+informations?\", ignore_case = TRUE)) ~ \"Indictments and Informations\",\n    TRUE ~ `Status or disposition`\n  )) %>%\n  group_by(Year, `Status or disposition`) %>%\n  summarise(\n    Total = sum(Total, na.rm = TRUE),\n    Legal = sum(`Legal source tax crimes`, na.rm = TRUE),\n    Illegal = sum(`Illegal source financial crimes`, na.rm = TRUE),\n    Narcotics = sum(`Narcotics-related financial crimes`, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\nmake_column_trace <- function(value_col) {\n  lapply(unique(plot_data$`Status or disposition`), function(status) {\n    sub <- plot_data %>% filter(`Status or disposition` == status)\n    list(\n      x = sub[[value_col]],\n      y = sub$Year,\n      name = status,\n      type = 'bar',\n      orientation = 'h',\n      hoverinfo = 'text',\n      text = paste0(\n        \"Year: \", sub$Year,\n        \"<br>Status: \", status,\n        \"<br>\", value_col, \": \", sub[[value_col]]\n      ),\n      textposition = \"none\",  \n      visible = TRUE\n    )\n  })\n}\n\ncolumns <- c(\"Total\", \"Legal\", \"Illegal\", \"Narcotics\")\nall_traces <- lapply(columns, make_column_trace)\n\ntraces_flat <- unlist(all_traces, recursive = FALSE)\nvisible_flags <- rep(FALSE, length(traces_flat))\nvisible_flags[1:length(all_traces[[1]])] <- TRUE \n\nfig <- plot_ly()\n\nfor (i in seq_along(traces_flat)) {\n  t <- traces_flat[[i]]\n  fig <- fig %>%\n    add_trace(\n      x = t$x,\n      y = t$y,\n      name = t$name,\n      type = t$type,\n      orientation = t$orientation,\n      hoverinfo = t$hoverinfo,\n      text = t$text,\n      textposition = t$textposition,\n      visible = visible_flags[i],\n      showlegend = TRUE\n    )\n}\n\ndropdown_buttons <- lapply(seq_along(columns), function(i) {\n  vis <- rep(FALSE, length(traces_flat))\n  idx <- ((i - 1) * length(all_traces[[1]]) + 1):(i * length(all_traces[[1]]))\n  vis[idx] <- TRUE\n  list(\n    method = \"update\",\n    args = list(list(visible = vis)),\n    label = columns[i]\n  )\n})\n\nfig <- fig %>%\n  layout(\n    title = list(\n      text = \"CI by Year Raw Count\",\n      x = 0.5\n    ),\n    barmode = \"stack\",\n    yaxis = list(title = \"Year\", type = \"category\", autorange = \"reversed\"),\n    xaxis = list(\n      title = \"Number of Cases\",\n      range = c(0, 3000)  \n    ),\n    updatemenus = list(\n      list(\n        buttons = dropdown_buttons,\n        direction = \"down\",\n        showactive = TRUE,\n        x = 0.05,\n        xanchor = \"left\",\n        y = 1.15,\n        yanchor = \"top\"\n      )\n    ),\n    colorway = c(\"#1B375D\", \"#EEB4B3\", \"#701C2B\", \"#32496E\", \"#495B80\", \"#616E92\", \"#7A819F\",\"#8395AF\", \"#DD6B69\", \"#C6526A\", \"#971D2C\")\n  )\n\nfig\n```\n\n```{r}\n#| fig.width: 12\n#| fig.asp: 0.9\n\nplot_data <- ci_data %>%\n  filter(!is.na(Year)) %>%\n  mutate(`Status or disposition` = case_when(\n    str_detect(`Status or disposition`, regex(\"indictments?\\\\s+and\\\\s+informations?\", ignore_case = TRUE)) ~ \"Indictments and Informations\",\n    TRUE ~ `Status or disposition`\n  )) %>%\n  group_by(Year, `Status or disposition`) %>%\n  summarise(\n    Total = sum(Total, na.rm = TRUE),\n    Legal = sum(`Legal source tax crimes`, na.rm = TRUE),\n    Illegal = sum(`Illegal source financial crimes`, na.rm = TRUE),\n    Narcotics = sum(`Narcotics-related financial crimes`, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\nnormalize_column <- function(df, column) {\n  df %>%\n    group_by(Year) %>%\n    mutate(pct = !!sym(column) / sum(!!sym(column), na.rm = TRUE) * 100) %>%\n    ungroup()\n}\n\nmake_percent_trace <- function(column_name) {\n  df <- normalize_column(plot_data, column_name)\n  lapply(unique(df$`Status or disposition`), function(status) {\n    sub <- df %>% filter(`Status or disposition` == status)\n    list(\n      x = sub$pct,\n      y = sub$Year,\n      name = status,\n      type = 'bar',\n      orientation = 'h',\n      hoverinfo = 'text',\n      text = paste0(\n        \"Year: \", sub$Year,\n        \"<br>Status: \", status,\n        \"<br>\", column_name, \": \", round(sub$pct, 1), \"%\"\n      ),\n      textposition = \"none\",\n      visible = TRUE\n    )\n  })\n}\n\ncolumns <- c(\"Total\", \"Legal\", \"Illegal\", \"Narcotics\")\nall_traces <- lapply(columns, make_percent_trace)\n\ntraces_flat <- unlist(all_traces, recursive = FALSE)\nvisible_flags <- rep(FALSE, length(traces_flat))\nvisible_flags[1:length(all_traces[[1]])] <- TRUE  \n\nfig <- plot_ly()\n\nfor (i in seq_along(traces_flat)) {\n  t <- traces_flat[[i]]\n  fig <- fig %>%\n    add_trace(\n      x = t$x,\n      y = t$y,\n      name = t$name,\n      type = t$type,\n      orientation = t$orientation,\n      hoverinfo = t$hoverinfo,\n      text = t$text,\n      textposition = t$textposition,\n      visible = visible_flags[i],\n      showlegend = TRUE\n    )\n}\n\ndropdown_buttons <- lapply(seq_along(columns), function(i) {\n  vis <- rep(FALSE, length(traces_flat))\n  vis[((i - 1) * length(all_traces[[1]]) + 1):(i * length(all_traces[[1]]))] <- TRUE\n  list(\n    method = \"update\",\n    args = list(list(visible = vis)),\n    label = columns[i]\n  )\n})\n\nfig <- fig %>%\n  layout(\n    title = list(\n      text = \"CI by Percent-of-year\",\n      x = 0.5\n    ),\n    barmode = \"stack\",\n    yaxis = list(title = \"Year\", type = \"category\", autorange = \"reversed\"),\n    xaxis = list(\n      title = \"Percentage of Cases per Year\",\n      range = c(0, 100)\n    ),\n    updatemenus = list(\n      list(\n        buttons = dropdown_buttons,\n        direction = \"down\",\n        showactive = TRUE,\n        x = 0.05,\n        xanchor = \"left\",\n        y = 1.15,\n        yanchor = \"top\"\n      )\n    ),\n    colorway = c(\"#1B375D\", \"#EEB4B3\", \"#701C2B\", \"#32496E\", \"#495B80\", \"#616E92\", \"#7A819F\",\"#8395AF\", \"#DD6B69\", \"#C6526A\", \"#971D2C\")\n  )\n\nfig\n```\n\n\n# About\n\n## Row {height = 15%}\n\n- This dashboard was created using [Quarto](https://quarto.org/) in [RStudio](https://posit.co/), and the [R Language and Environment](https://cran.r-project.org/).\n\n- The datasets used to create this dashboard was downloaded from:\n\n[Quarterly Sentencing Updates](https://www.ussc.gov/research/data-reports/quarter/quarterly-sentencing-updates),\n[2024 Federal Sentence Statistics](https://www.ussc.gov/research/data-reports/geography/2024-federal-sentencing-statistics),\n[Commission Datafiles](https://www.ussc.gov/research/datafiles/commission-datafiles)\n\n## Row {height = 75%}\nSoftware Citations include:\n\nArnold J (2024). _ggthemes: Extra Themes, Scales and Geoms for 'ggplot2'_. R package version 5.1.0, <https://CRAN.R-project.org/package=ggthemes>.\n\nBache S, Wickham H (2022). _magrittr: A Forward-Pipe Operator for R_. R package version 2.0.3, <https://CRAN.R-project.org/package=magrittr>\n\nBarrett T, Dowle M, Srinivasan A, Gorecki J, Chirico M, Hocking T, Schwendinger B (2024). _data.table: Extension of `data.frame`_. R package version 1.16.4, <https://CRAN.R-project.org/package=data.table>..\n\nCameron A, van den Brand T (2025). _geomtextpath: Curved Text in 'ggplot2'_. R package version 0.1.5,\n  <https://CRAN.R-project.org/package=geomtextpath>.\n\nC. Sievert. Interactive Web-Based Data Visualization with R, plotly, and shiny. Chapman and\n  Hall/CRC Florida, 2020.\n\nDancho M, Vaughan D (2025). _tidyquant: Tidy Quantitative Financial Analysis_. R package version 1.0.11, <https://CRAN.R-project.org/package=tidyquant>.\n\nFirke S (2024). _janitor: Simple Tools for Examining and Cleaning Dirty Data_. R package version 2.2.1,<https://CRAN.R-project.org/package=janitor>.\n\nNeuwirth E (2022). _RColorBrewer: ColorBrewer Palettes_. R package version 1.1-3, <https://CRAN.R-project.org/package=RColorBrewer>.\n\nRinker, T. W. & Kurkiewicz, D. (2017). pacman: Package Management for R. version 0.5.0. Buffalo, New York. http://github.com/trinker/pacman\n\n\nKunst J (2022). _highcharter: A Wrapper for the 'Highcharts' Library_. R package version 0.9.4,\n  <https://CRAN.R-project.org/package=highcharter>.\n\nOoms J (2024). _js: Tools for Working with JavaScript in R_. R package version 1.2.1,\n  <https://CRAN.R-project.org/package=js>.\n\nWickham H (2023). _stringr: Simple, Consistent Wrappers for Common String Operations_. R package version 1.5.1, <https://CRAN.R-project.org/package=stringr>.\n\nWickham H, Averick M, Bryan J, Chang W, McGowan LD, François R, Grolemund G, Hayes A, Henry L, Hester J, Kuhn M,Pedersen TL, Miller E, Bache SM, Müller K, Ooms J, Robinson D, Seidel DP, Spinu V, Takahashi K, Vaughan D, Wilke C, Woo K, Yutani H (2019). “Welcome to the tidyverse.” _Journal of Open Source Software_, *4*(43), 1686. doi:10.21105/joss.01686 <https://doi.org/10.21105/joss.01686>.\n\nWickham H, François R, Henry L, Müller K, Vaughan D (2023). _dplyr: A Grammar of Data Manipulation_. R package version 1.1.4, <https://CRAN.R-project.org/package=dplyr>.\n\nWickham H, Henry L (2023). _purrr: Functional Programming Tools_. R package version 1.0.2,\n  <https://CRAN.R-project.org/package=purrr>.\n\nWickham H, Bryan J (2023). _readxl: Read Excel Files_. R package version 1.4.3,\n  <https://CRAN.R-project.org/package=readxl>.\n\nWickham H, Hester J, Bryan J (2024). _readr: Read Rectangular Text Data_. R package version 2.1.5, <https://CRAN.R-project.org/package=readr>.\n\nZhu H (2024). _kableExtra: Construct Complex Table with 'kable' and Pipe Syntax_. R package\n  version 1.4.0, <https://CRAN.R-project.org/package=kableExtra>.\n\nWickham H, Bryan J (2025). _readxl: Read Excel Files_. R package version 1.4.5,\n  <https://CRAN.R-project.org/package=readxl>. \n\nC. Sievert. Interactive Web-Based Data Visualization with R, plotly, and shiny. Chapman and\n  Hall/CRC Florida, 2020. <https://plotly-r.com> \n\n<script>\n  // Create an audio object for the bald eagle sound\n  const eagleSound = new Audio('assets/eagle.mp3');\n\n  // Function to play the sound\n  function playEagleSound() {\n    eagleSound.play();\n  }\n\n  // Event listener for page changes\n  document.addEventListener('DOMContentLoaded', () => {\n    // Trigger sound when the page loads or changes\n    playEagleSound();\n\n    // Optional: Detect navigation within single-page apps or dashboards\n    document.querySelectorAll('a').forEach(link => {\n      link.addEventListener('click', () => {\n        setTimeout(playEagleSound, 500); // Play sound after navigating\n      });\n    });\n  });\n</script>\n\n\n<!-- Embed audio element -->\n<script>\n  // Create an audio object for the song\n  const aboutSong = new Audio('assets/fergie.mp3');\n\n  // Function to play the song\n  function playAboutSong() {\n    aboutSong.currentTime = 0; // Reset song to the beginning\n    aboutSong.play(); // Play the song\n  }\n\n  // Event listener to detect page navigation\n  document.addEventListener('DOMContentLoaded', () => {\n    document.querySelectorAll('a').forEach(link => {\n      link.addEventListener('click', () => {\n        // Check if the link corresponds to the \"About\" slide\n        const slideName = link.getAttribute('href'); // Get the linked page\n        if (slideName && slideName.toLowerCase().includes('about')) {\n          setTimeout(playAboutSong, 500); // Play the song after navigation\n        }\n      });\n    });\n  });\n</script>\n","srcMarkdownNoYaml":"\n\n```{r setup, warning=F, message=F, include=F}\n# this line specifies options for default options for all R Chunks\nknitr::opts_chunk$set(echo=F)\n\n# suppress scientific notation\noptions(scipen=100)\n\n# install helper package that loads and installs other packages, if needed\nif (!require(\"pacman\")) install.packages(\"pacman\", repos = \"http://lib.stat.cmu.edu/R/CRAN/\")\n\n# install and load required packages\n# pacman should be first package in parentheses and then list others\npacman::p_load(pacman,tidyverse, magrittr, tidyquant, ggthemes, \n               RColorBrewer, highcharter, kableExtra, data.table, geomtextpath, readxl, ploty)\n\n# verify packages\n#p_loaded()\n\n\n```\n\n```{r} \n\n# Create a single dataframe of Tax sentencing counts from all CSVs\ntax_data <- list.files(\"data\", pattern = \"Sentenced_Individuals_FY.*\\\\.csv$\", full.names = TRUE) |>\n  map_dfr(\\(file) {\n    read_csv(file, show_col_types = FALSE) |>\n      rename(`TYPE OF CRIME` = 1) |>\n      filter(`TYPE OF CRIME` == \"Tax\") |>\n      select(N) |>\n      mutate(Year = str_extract(file, \"FY\\\\d{4}\") |> str_remove(\"FY\") |> as.numeric())\n  }) |>\n  arrange(Year) |>\n  mutate(N = as.numeric(N))\n\n```\n\n```{r}\n# Files for average sentence length\nfiles <- list.files(\"data\", pattern = \"sentence_lengths_\\\\d{4}\\\\.csv$\", full.names = TRUE)\n\n# Read, clean, and pull only Tax + Mean Months + Year\navg_sentence_data <- map_dfr(files, \\(file) {\n  df <- read_csv(file, show_col_types = FALSE)\n\n# Standardize column name if needed\n  if (\"TYPE OF CRIME\" %in% names(df)) {\n    df <- df |> rename(`Type of Crime` = `TYPE OF CRIME`)\n  }\n\n# Filter to Tax only and pull year\n  df |>\n    filter(`Type of Crime` == \"Tax\") |>\n    mutate(\n      Year = str_extract(file, \"\\\\d{4}\") |> as.numeric(),\n      `Mean Months` = as.numeric(`Mean Months`)\n    ) |>\n    select(Year, `Mean Months`)\n}) |>\n  arrange(Year)\n\n```\n\n# Home\n\n![](img/cover.png)\n\n# Sentencing by Crime\n\n## Row {height = 10%}\n\nTax crimes tend to receive less prison time than violent offenses but are more likely to result in probation. They rarely end with fines alone. Overall, tax offenses are treated as less dangerous but still serious, often leading to probation rather than imprisonment or just a fine.\n\nQuestion: How does the sentencing rate of tax fraud compare to other types of crimes?\n\n## Row {height = 90%}\n\n```{r}\n#| include: false\n#| warning: false\n#| message: false\n#| echo: false\ndf <- read_excel(\"data/sentence_length_by_crime_fy2024.xlsx\") |> \n  filter(`Type of Crime` != \"TOTAL\") |> \n  drop_na() |> \n  mutate(TaxFlag = ifelse(`Type of Crime` == \"Tax\", \"Tax\", \"Other\"))\n```\n\n```{r}\n#| echo: false\n#| warning: false\n#| message: false\n#| fig-height: 6\nggplot(df, aes(x = reorder(`Type of Crime`, `Mean Months`), y = `Mean Months`, fill = TaxFlag)) +\n  geom_col() +\n  coord_flip() +\n  scale_fill_manual(values = c(\"Tax\" = \"#971D2C\", \"Other\" = \"#1B375D\")) +\n  labs(title = \"Mean Sentence Length by Crime\", x = \"Crime Type\", y = \"Mean Months\") +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"none\",\n    text=element_text(family=\"serif\")\n  )\n\n```\n\n```{r}\n#| echo: false\n#| warning: false\n#| message: false\n#| fig-height: 6\nggplot(df, aes(x = reorder(`Type of Crime`, `Median Months`), y = `Median Months`, fill = TaxFlag)) +\n  geom_col() +\n  coord_flip() +\n  scale_fill_manual(values = c(\"Tax\" = \"#971D2C\", \"Other\" = \"#1B375D\")) +\n  labs(title = \"Median Sentence Length by Crime\", x = \"Crime Type\", y = \"Median Months\") +\n  theme_minimal(base_size = 14)+\n  theme(\n    legend.position = \"none\",\n    text=element_text(family=\"serif\")\n  )\n```\n\n# Prison Sentencing\n\n## Row {height = 10%}\n\nTax crimes receive much shorter sentences than most other crimes, both in average and median length. This highlights that tax offenses are generally treated as less severe than violent or high-risk crimes.\n\nQuestion: How are tax fraud charges punished compared to other types of crimes?\n\n## Row {height = 90%}\n\n```{r}\n#| include: false\n#| warning: false\n#| message: false\n#| echo: false\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(dplyr)\n\ncrime_data <- read_excel(\"data/sentence_type_by_crime_fy2024.xlsx\")\nselected_crimes <- c(\n  \"Tax\", \"Assault\", \"Robbery\", \"Sexual Abuse\", \"Fraud/Theft/Embezzlement\",\n  \"Money Laundering\", \"Drug Trafficking\", \"Drug Possession\",\n  \"Firearms\", \"Child Pornography\", \"Environmental\"\n)\n\ncrime_plot_data <- crime_data |> \n  filter(`Type of Crime` %in% selected_crimes) |> \n  rename(Crime = `Type of Crime`)\n\nplot_sentence_type <- function(column_name, title_text) {\n  ggplot(crime_plot_data, aes(x = reorder(Crime, .data[[column_name]]), y = .data[[column_name]], fill = Crime == \"Tax\")) +\n    geom_col() +\n    coord_flip() +\n    scale_fill_manual(values = c(\"TRUE\" = \"#971D2C\", \"FALSE\" = \"#1B375D\"), guide = \"none\") +\n    labs(\n      title = title_text,\n      x = \"Crime Type\",\n      y = \"Percentage (%)\"\n    ) +\n    theme_minimal(base_size = 14)+\n    theme(\n      text=element_text(family=\"serif\")\n    )\n}\n```\n\n\n```{r}\n#| echo: false\n#| warning: false\n#| message: false\n#| fig-height: 6\nplot_sentence_type(\"Prison Only (%)\", \"Prison Only Rate: Tax vs Selected Crimes\")\n\n```\n\n\n```{r}\n#| echo: false\n#| warning: false\n#| message: false\n#| fig-height: 6\nplot_sentence_type(\"Probation Only (%)\", \"Probation Only Rate: Tax vs Selected Crimes\")\n\n```\n\n```{r}\n#| echo: false\n#| warning: false\n#| message: false\n#| fig-height: 6\nplot_sentence_type(\"Fine Only (%)\", \"Fine Only Rate: Tax vs Selected Crimes\")\n```\n\n\n# Trends in Federal Tax Fraud Over Time\n\n## Row\n\nThis page provides an overview of federal tax fraud sentencing patterns in the United States from 2014 to 2024, focusing on both the number of individuals sentenced and the average length of prison sentences. Through interactive line charts, users can observe a notable decline in sentencing rates leading up to 2018, followed by fluctuations in recent years. Similarly, the average sentence length remained stable through 2017 before rising sharply in 2018 and varying slightly thereafter. These visualizations offer insight into how enforcement and sentencing practices have evolved over the past decade.\n\n## Row\n\n```{r}\n\n# Interactive line chart for Tax fraud sentencing counts\nhighchart() |>\n  hc_title(text = \"Individuals Sentenced for Tax Fraud\") |>\n  hc_xAxis(title = list(text = \"Fiscal Year\"), categories = tax_data$Year) |>\n  hc_yAxis(title = list(text = \"Number Sentenced\")) |>\n  hc_add_series(name = \"Tax Fraud Sentencings\", data = tax_data$N, type = \"line\") |>\n  hc_tooltip(pointFormat = \"Year: {point.category}<br>Sentenced: {point.y}\") |>\n  hc_colors(\"#5A708E\")\n\n```\n\n```{r}\n\n#Interactive line chart\nhighchart() |>\n  hc_title(text = \"Average Prison Sentence for Tax Fraud\") |>\n  hc_xAxis(title = list(text = \"Fiscal Year\"), categories = avg_sentence_data$Year) |>\n  hc_yAxis(title = list(text = \"Average Sentence (Months)\")) |>\n  hc_add_series(name = \"Average Sentence (Months)\", data = avg_sentence_data$`Mean Months`, type = \"line\") |>\n  hc_tooltip(pointFormat = \"Year: {point.category}<br>Avg. Sentence: {point.y} months\") |>\n  hc_colors(\"#EEB4B3\")\n\n```\n\n## Row\n\nQuestions answered from this data: \n\n- How has tax fraud sentencing rates changed overtime?\n\n- What is the average length of prison sentences for tax fruad overtime?\n\n# Sentencing by Gender and Race\n\n```{r 1, warning=F, message=F, echo=F, include=F}\nGender2014 <- read.csv(\"data/Gender 2014.csv\")\nGender2015 <- read.csv(\"data/Gender 2015.csv\")\nGender2016 <- read.csv(\"data/Gender 2016.csv\")\nGender2017 <- read.csv(\"data/Gender 2017.csv\")\nGender2018 <- read.csv(\"data/Gender 2018.csv\")\nGender2019 <- read.csv(\"data/Gender 2019.csv\")\nGender2020 <- read.csv(\"data/Gender 2020.csv\")\nGender2021 <- read.csv(\"data/Gender 2021.csv\")\nGender2022 <- read.csv(\"data/Gender 2022.csv\")\nGender2023 <- read.csv(\"data/Gender 2023.csv\")\nGender2024 <- read.csv(\"data/Gender 2024.csv\")\n\nGender2013 <- read.csv(\"data/Gender 2013.csv\")\nGender2012 <- read.csv(\"data/Gender 2012.csv\")\nGender2011 <- read.csv(\"data/Gender 2011.csv\")\nGender2010 <- read.csv(\"data/Gender 2010.csv\")\nGender2009 <- read.csv(\"data/Gender 2009.csv\")\nGender2008 <- read.csv(\"data/Gender 2008.csv\")\nGender2007 <- read.csv(\"data/Gender 2007.csv\")\n```\n\n```{r 2, warning=F, message=F, echo=F, include=F}\nRace2014 <- read.csv(\"data/Race 2014.csv\")\nRace2015 <- read.csv(\"data/Race 2015.csv\")\nRace2016 <- read.csv(\"data/Race 2016.csv\")\nRace2017 <- read.csv(\"data/Race 2017.csv\")\nRace2018 <- read.csv(\"data/Race 2018.csv\")\nRace2019 <- read.csv(\"data/Race 2019.csv\")\nRace2020 <- read.csv(\"data/Race 2020.csv\")\nRace2021 <- read.csv(\"data/Race 2021.csv\")\nRace2022 <- read.csv(\"data/Race 2022.csv\")\nRace2023 <- read.csv(\"data/Race 2023.csv\")\nRace2024 <- read.csv(\"data/Race 2024.csv\")\n\n\nRace2013 <- read.csv(\"data/Race 2013.csv\")\nRace2012 <- read.csv(\"data/Race 2012.csv\")\nRace2011 <- read.csv(\"data/Race 2011.csv\")\nRace2010 <- read.csv(\"data/Race 2010.csv\")\nRace2009 <- read.csv(\"data/Race 2009.csv\")\nRace2008 <- read.csv(\"data/Race 2008.csv\")\nRace2007 <- read.csv(\"data/Race 2007.csv\")\n\n\n```\n\n```{r 3, warning=F, message=F, echo=F, include=F}\nGender2014s <- Gender2014[20,] |> \n  mutate(year = (\"2014-12-31\"))\nGender2014s$year <- as.Date(\"2014-12-31\")\n         \nGender2015s <- Gender2015[20,] |> \n  mutate(year = \"2015-12-31\")\nGender2015s$year <- as.Date(\"2015-12-31\")\n\nGender2016s <- Gender2016[20,] |> \n  mutate(year = \"2016-12-31\")\nGender2016s$year <- as.Date(\"2016-12-31\")\n\nGender2017s <- Gender2017[20,] |> \n  mutate(year = \"2017-12-31\")\nGender2017s$year <- as.Date(\"2017-12-31\")\n\nGender2018s <- Gender2018[30,] |> \n  mutate(year = \"2018-12-31\")\nGender2018s$year <- as.Date(\"2018-12-31\")\n\nGender2019s <- Gender2019[30,] |> \n  mutate(year = \"2019-12-31\")\nGender2019s$year <- as.Date(\"2019-12-31\")\n\nGender2020s <- Gender2020[30,] |> \n  mutate(year = \"2020-12-31\")\nGender2020s$year <- as.Date(\"2020-12-31\")\n\nGender2021s <- Gender2021[30,] |> \n  mutate(year = \"2021-12-31\")\nGender2021s$year <- as.Date(\"2021-12-31\")\n\nGender2022s <- Gender2022[30,] |> \n  mutate(year = \"2022-12-31\")\nGender2022s$year <- as.Date(\"2022-12-31\")\n\nGender2023s <- Gender2023[30,] |> \n  mutate(year = \"2023-12-31\")\nGender2023s$year <- as.Date(\"2023-12-31\")\n\nGender2024s <- Gender2024[30,] |> \n  mutate(year = \"2024-12-31\")\nGender2024s$year <- as.Date(\"2024-12-31\")\n\n\n\nGender2013s <- Gender2013[19,] |> \n  mutate(year = \"2013-12-31\")\nGender2013s$year <- as.Date(\"2013-12-31\")\n\nGender2012s <- Gender2012[20,] |> \n  mutate(year = \"2012-12-31\") |> \n  rename(MALE_N = Male.N, FEMALE_N = Female.N)\nGender2012s$year <- as.Date(\"2012-12-31\") \n\nGender2011s <- Gender2011[19,] |> \n  mutate(year = \"2011-12-31\") |> \n  rename(MALE_N = MALE.N, FEMALE_N = FEMALE.N)\nGender2011s$year <- as.Date(\"2011-12-31\")\n\nGender2010s <- Gender2010[19,] |> \n  mutate(year = \"2010-12-31\") |> \n  rename(MALE_N = Male.N, FEMALE_N = Female.N)\nGender2010s$year <- as.Date(\"2010-12-31\")\n\nGender2009s <- Gender2009[19,] |> \n  mutate(year = \"2009-12-31\") |> \n  rename(MALE_N = Male.N, FEMALE_N = Female.N)\nGender2009s$year <- as.Date(\"2009-12-31\")\n\nGender2008s <- Gender2008[20,] |> \n  mutate(year = \"2008-12-31\")\nGender2008s$year <- as.Date(\"2008-12-31\")\n\nGender2007s <- Gender2007[19,] |> \n  mutate(year = \"2007-12-31\") |> \n  rename(MALE_N = MALE.N, FEMALE_N = FEMALE.N)\nGender2007s$year <- as.Date(\"2007-12-31\")\n\n\nGenderTF <- Gender2014s |> \n  full_join(Gender2015s) |> \n  full_join(Gender2017s) |> \n  full_join(Gender2016s) |> \n  full_join(Gender2018s) |> \n  full_join(Gender2019s) |> \n  full_join(Gender2020s) |> \n  full_join(Gender2021s) |> \n  full_join(Gender2022s) |> \n  full_join(Gender2023s) |> \n  full_join(Gender2024s) |> \n  full_join(Gender2013s) |> \n  full_join(Gender2012s) |> \n  full_join(Gender2011s) |> \n  full_join(Gender2010s) |> \n  full_join(Gender2009s) |> \n  full_join(Gender2008s) |> \n  full_join(Gender2007s)\n  \n\nGenderTF <- GenderTF |> \n  select(2:7) |> \n  mutate(Type_of_crime = \"Tax\")\n\nGender.xts <- xts(x = GenderTF[,c(2,4)], order.by = GenderTF$year)\n\n```\n\n```{r 4, warning=F, message=F, echo=F, include=F}\nRace2007s <- Race2007[20,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2007-12-31\")) |> \n  rename(White_N = White.N, \n         Black_N = Black.N, \n         Hispanic_N = Hispanic.N, \n         Other_N = Other.N)\n\nRace2008s <- Race2008[20,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2008-12-31\")) |> \n  rename(White_N = White.N, \n         Black_N = Black.N, \n         Hispanic_N = Hispanic.N, \n         Other_N = Other.N)\n\nRace2009s <- Race2009[20,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2009-12-31\")) |> \n  rename(White_N = White.N, \n         Black_N = Black.N, \n         Hispanic_N = Hispanic.N, \n         Other_N = Other.N)\n\nRace2010s <- Race2010[20,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2010-12-31\")) |> \n  rename(White_N = White.N, \n         Black_N = Black.N, \n         Hispanic_N = Hispanic.N, \n         Other_N = Other.N)\n\nRace2011s <- Race2011[20,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2011-12-31\")) |> \n  rename(White_N = White.N, \n         Black_N = Black.N, \n         Hispanic_N = Hispanic.N, \n         Other_N = Other.N)\n  \nRace2012s <- Race2012[19,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2012-12-31\")) |> \n  rename(White_N = White.N, \n         Black_N = Black.N, \n         Hispanic_N = Hispanic.N, \n         Other_N = Other.N)\n\nRace2013s <- Race2013[20,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2013-12-31\")) |> \n  rename(White_N = White.N, \n         Black_N = Black.N, \n         Hispanic_N = Hispanic.N, \n         Other_N = Other.N)\n\nRace2014s <- Race2014[20,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2014-12-31\")) |> \n  rename(White_N = WHITE_N, \n         Black_N = BLACK_N, \n         Hispanic_N = HISPANIC_N, \n         Other_N = OTHER_N)\n\nRace2015s <- Race2015[19,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2015-12-31\")) |> \n  rename(White_N = WHITE_N, \n         Black_N = BLACK_N, \n         Hispanic_N = HISPANIC_N, \n         Other_N = OTHER_N)\n\nRace2016s <- Race2016[19,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2016-12-31\")) |> \n  rename(White_N = WHITE.N, \n         Black_N = BLACK.N, \n         Hispanic_N = HISPANIC.N, \n         Other_N = OTHER.N)\n\nRace2017s <- Race2017[20,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2017-12-31\")) |> \n  rename(White_N = WHITE.N, \n         Black_N = BLACK.N, \n         Hispanic_N = HISPANIC.N, \n         Other_N = OTHER.N)\n\nRace2018s <- Race2018[30,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2018-12-31\")) |> \n  rename(White_N = WHITE_N, \n         Black_N = BLACK_N, \n         Hispanic_N = HISPANIC_N, \n         Other_N = OTHER_N)\n\nRace2019s <- Race2019[30,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2019-12-31\")) |> \n  rename(White_N = WHITE_N, \n         Black_N = BLACK_N, \n         Hispanic_N = HISPANIC_N, \n         Other_N = OTHER_N)\n\nRace2020s <- Race2020[30,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2020-12-31\")) |> \n  rename(White_N = WHITE_N, \n         Black_N = BLACK_N, \n         Hispanic_N = HISPANIC_N, \n         Other_N = OTHER_N)\n\nRace2021s <- Race2021[30,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2021-12-31\")) |> \n  rename(White_N = WHITE_N, \n         Black_N = BLACK_N, \n         Hispanic_N = HISPANIC_N, \n         Other_N = OTHER_N)\n\nRace2022s <- Race2022[30,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2022-12-31\")) |> \n  rename(White_N = WHITE_N, \n         Black_N = BLACK_N, \n         Hispanic_N = HISPANIC_N, \n         Other_N = OTHER_N)\n\nRace2023s <- Race2023[30,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2023-12-31\")) |> \n  rename(White_N = WHITE_N, \n         Black_N = BLACK_N, \n         Hispanic_N = HISPANIC_N, \n         Other_N = OTHER_N)\n\nRace2024s <- Race2024[30,c(1,3,5,7,9)] |> \n  mutate(Year = as.Date(\"2024-12-31\")) |> \n  rename(White_N = WHITE_N, \n         Black_N = BLACK_N, \n         Hispanic_N = HISPANIC_N, \n         Other_N = OTHER_N)\n\nRaceTF <- Race2007s |> \n  full_join(Race2008s) |> \n  full_join(Race2009s) |> \n  full_join(Race2010s) |> \n  full_join(Race2011s) |> \n  full_join(Race2012s) |> \n  full_join(Race2013s) |> \n  full_join(Race2014s) |> \n  full_join(Race2015s) |> \n  full_join(Race2016s) |> \n  full_join(Race2017s) |> \n  full_join(Race2018s) |> \n  full_join(Race2019s) |> \n  full_join(Race2020s) |> \n  full_join(Race2021s) |> \n  full_join(Race2022s) |> \n  full_join(Race2023s) |> \n  full_join(Race2024s)\n\nRaceTF <- RaceTF |> \n  select(2:6) |> \n  mutate(Type_of_crime = \"Tax\")\n\nRace.xts <- xts(x = RaceTF[,c(1:4)], order.by = RaceTF$Year) \n  \nnum_highest <- max(RaceTF$White_N)\nnum_highestg <- max(GenderTF$MALE_N)\n\n```\n\n## Row {height=\"15%\"}\n\nThis page provides an overview of tax fraud trends by gender and race from 2007 to 2024 by using interactive Highchart plots. The data reveals a significant gender disparity, with male cases consistently outnumbering female cases. Racially, white individuals historically show the highest numbers, though cases among Black and Hispanic individuals have increased in recent years. The number of men sentenced was the largest, reaching `r num_highest`. Among the races, the number of white people was the largest, reaching `r num_highestg`.Data from [United States Sentencing Commision](https://www.ussc.gov/research/data-reports/quarter/quarterly-sentencing-updates).\n\nQuestion: How have gender and racial disparities in tax fraud convictions evolved in the United States from 2007 to 2024?\n\n## Row {height=\"55%\"}\n\n```{r 5, warning=F, message=F, echo=F}\n\n(GenderHc <- hchart(Gender.xts$MALE_N, name = \"Male\", color = \"#1B375D\") |> \n  hc_add_series(Gender.xts$FEMALE_N, name = \"Female\", color = \"#971D2C\"))\n\n```\n\n```{r 6, warning=F, message=F, echo=F}\n\n(RaceHc <- hchart(Race.xts$White_N, name = \"White\", color = \"#971D2C\") |> \n  hc_add_series(Race.xts$Black_N, name = \"Balck\", color = \"#1B375D\") |> \n  hc_add_series(Race.xts$Hispanic_N, name = \"Hispanic\", color = \"#5A708E\") |> \n  hc_add_series(Race.xts$Other_N, name = \"Other\", color = \"#EEB4B3\"))\n```\n\n\n## Row {Height=\"30%\"}\n\n```{r}\nGenderKable <- GenderTF |> \n  mutate(Year = year) |> \n  select(Year,MALE_N,FEMALE_N) |> \n  rename(\"Male Number\" = \"MALE_N\", \"Female number\" = \"FEMALE_N\")\n\nkable(GenderKable) |> kable_styling(full_width = F)\n```\n\n```{r}\nRaceKable <- RaceTF |> \n  select(Year, White_N, Black_N, Hispanic_N, Other_N) |> \n  rename(\"White Number\" = \"White_N\", \n         \"Black Number\" = \"Black_N\",\n         \"Hispanic Number\" = \"Hispanic_N\",\n         \"Other Number\" = \"Other_N\")\n\nkable(RaceKable) |> kable_styling(full_width = F)\n```\n\n# Sentencing by State\n\n## Row\n\n### Column {width=\"70%\"}\n\n```{r}\n\n# install.packages(\"plotly\")\nlibrary(plotly)\n\n# Load your data\nstate_data <- read_csv(\"data/state_sentence.csv\")\n\n# Add abbreviations\nstate_data <- state_data %>%\n  mutate(state_abbr = state.abb[match(state, state.name)])\n\n# Plot with bright, reversed \"Blues\" scale (light = low, dark = high)\nplot_geo(state_data, locationmode = 'USA-states') %>%\n  add_trace(\n    locations = ~state_abbr,\n    z = ~num_tax_sentence,\n    text = ~paste(state_abbr, \"<br>Tax Sentences:\", num_tax_sentence),\n    colorscale = \"Blues\",  # Clean, bright gradient\n    reversescale = TRUE,   # Makes higher values darker blue\n    colorbar = list(title = \"Tax Sentences\"),\n    type = 'choropleth',\n    zmin = min(state_data$num_tax_sentence, na.rm = TRUE),\n    zmax = max(state_data$num_tax_sentence, na.rm = TRUE)\n  ) %>%\n  layout(\n  geo = list(scope = 'usa'),\n  title = list(\n    text = paste0(\n      \"Number of Tax Sentence by Different States 2024\"\n    ),\n    x = 0.5,\n    xanchor = \"center\",\n    y= 0.9\n  ),\n  annotations = list(\n    list(\n      text = \"Data Source: https://www.ussc.gov/research/data-reports/geography/2024-federal-sentencing-statistics\",\n      xref = \"paper\", yref = \"paper\",\n      x = 0, y = 0,\n      showarrow = FALSE,\n      font = list(size = 11, color = \"gray\")\n    )\n  )\n)\n\n```\n\n\n### Column {width=\"30%\"}\n\n#### Row\n\nIn 2024, federal tax sentences were most concentrated in high-population states like New York, California, Texas, and Florida. Less populated states, especially in the Midwest and Mountain West, saw few or no cases. The distribution suggests that tax enforcement aligns closely with economic activity and population density.\n\nQuestion: What states earn the highest number of convictions of tax fraud?\n\n#### Row\n```{r}\nfull_state <- state_data |>\n  select(state, num_tax_sentence)\n  \nkable(full_state) |> kable_styling(full_width = F) \n```\n\n#### Row\n\nInformation on [2024 Federal Sentencing Statistics](https://www.ussc.gov/research/data-reports/geography/2024-federal-sentencing-statistics)\n\n# Sentencing by Region/Age/Education\n\n## Row {height=75%}\n\n```{r Data Management for Page X, Graph 1}\nopafy23 <- fread(\"data/CSV1.csv\") |> \n  filter(OFFGUIDE == 16 | OFFGUIDE == 29, LOSS1 != 9999999997)|> \n  mutate(SENTYEARS = SENTTCAP / 12,\n         districtF = factor(DISTRICT,\n                            levels <- c(\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"60\", \"61\", \"62\", \"63\", \"64\", \"65\", \"66\", \"67\", \"68\", \"69\", \"70\", \"71\", \"72\", \"73\", \"74\", \"75\", \"76\", \"77\", \"78\", \"79\", \"80\", \"81\", \"82\", \"83\", \"84\", \"85\", \"86\", \"87\", \"88\", \"89\", \"90\", \"91\", \"93\", \"94\", \"95\", \"96\"),\n                            labels <- c(\"ME\", \"MA\", \"NH\", \"RI\", \"PR\", \"CT\", \"NY N\", \n                      \"NY E\", \"NY S\", \"NY W\", \"VT\", \"DE\", \"NJ\", \"PA E\", \n                      \"PA M\", \"PA W\", \"MD\", \"NC E\", \"NC M\", \"NC W\", \n                      \"SC\", \"VA E\", \"VA W\", \"WV N\", \"WV S\", \n                      \"AL N\", \"AL M\", \"AL S\", \"FL N\", \"FL M\", \"FL S\", \n                      \"GA N\", \"GA M\", \"GA S\", \"LA E\", \"LA W\", \"MS N\", \n                      \"MS S\", \"TX N\", \"TX E\", \"TX S\", \"TX W\", \"KY E\", \n                      \"KY W\", \"MI E\", \"MI W\", \"OH N\", \"OH S\", \"TN E\", \n                      \"TN M\", \"TN W\", \"IL N\", \"IL C\", \"IL S\", \"IN N\", \n                      \"IN S\", \"WI E\", \"WI W\", \"AR E\", \"AR W\", \"IA N\", \n                      \"IA S\", \"MN\", \"MO E\", \"MO W\", \"NE\", \"ND\", \"SD\", \n                      \"AZ\", \"CA N\", \"CA E\", \"CA C\", \"CA S\", \"HI\", \n                      \"ID\", \"MT\", \"NV\", \"OR\", \"WA E\", \"WA W\", \"CO\", \"KS\", \n                      \"NM\", \"OK N\", \"OK E\", \"OK W\", \"UT\", \"WY\", \"DC\", \n                      \"VI\", \"GU\", \"MP\", \"AK\", \"LA M\"))\n         ) |> \n  group_by(districtF, DISTRICT)|> \n  summarise(average_sentence = mean(SENTYEARS, na.rm=T),\n            average_loss = mean(LOSS1, na.rm=T)\n  ) |> \n  ungroup()|> \n  mutate(\n    REGION = case_when(\n          # Northeast\n          districtF %in% c(\"ME\", \"MA\", \"NH\", \"RI\", \"CT\", \"NY N\", \"NY E\", \"NY S\", \"NY W\", \"VT\", \"NJ\", \"PA E\", \"PA M\", \"PA W\") ~ \"Northeast\",\n          # Midwest\n          districtF %in% c(\"OH N\", \"OH S\", \"MI E\", \"MI W\", \"IN N\", \"IN S\", \"IL N\", \"IL C\", \"IL S\", \"WI E\", \"WI W\", \"MN\", \"IA N\", \"IA S\", \"MO E\", \"MO W\", \"ND\", \"SD\", \"NE\", \"KS\") ~ \"Midwest\",\n          # West\n          districtF %in% c(\"MT\", \"ID\", \"WY\", \"CO\", \"UT\", \"NM\", \"AZ\", \"NV\") ~ \"West\",\n          # South\n          districtF %in% c(\"DE\", \"MD\", \"DC\", \"VA E\", \"VA W\", \"WV N\", \"WV S\", \"NC E\", \"NC M\", \"NC W\", \"SC\", \"GA N\", \"GA M\", \"GA S\", \"FL N\", \"FL M\", \"FL S\", \"AL N\", \"AL M\", \"AL S\", \"MS N\", \"MS S\", \"LA E\", \"LA W\", \"LA M\", \"TX N\", \"TX E\", \"TX S\", \"TX W\", \"AR E\", \"AR W\", \"OK N\", \"OK E\", \"OK W\", \"KY E\", \"KY W\", \"TN E\", \"TN M\", \"TN W\") ~ \"South\",\n          # Pacific\n          districtF %in% c(\"CA N\", \"CA E\", \"CA C\", \"CA S\", \"HI\", \"WA E\", \"WA W\", \"OR\", \"AK\") ~ \"Pacific\",\n          #Caribbean\n          districtF %in% c(\"PR\", \"GU\")~\"Caribbean\"),\n    REGIONF = factor(REGION)\n  ) |> \n  arrange(REGION, desc(average_sentence)) |> \n  slice(1:50) |> \n  mutate(\n    id=seq(1:50)\n  )\n\n\n\n\n\nempty_bar <- 4\nto_add <- data.frame( matrix(NA, empty_bar*nlevels(opafy23$REGIONF), ncol(opafy23)) )\ncolnames(to_add) <- colnames(opafy23)\nto_add$REGIONF <- rep(levels(opafy23$REGIONF), each=empty_bar)\nopafy23 <- rbind(opafy23, to_add)\n\nextra_end <- data.frame(matrix(NA, 3, ncol(opafy23)))\ncolnames(extra_end) <- colnames(opafy23)\nextra_end$REGIONF <- \"Caribbean\"\n\nopafy23 <- rbind(opafy23, extra_end)\n\nopafy23 <- opafy23 |>  arrange(REGIONF)\nopafy23$id <- seq(1, nrow(opafy23))\nopafy23 <- opafy23|> \n  slice(1:73)\n\n\n\n\nlabel_opafy23 <- opafy23\nnumber_of_bar <- nrow(label_opafy23)\nangle <-  90 - 360 * (label_opafy23$id-0.5) /number_of_bar\nlabel_opafy23$hjust <-ifelse(angle < -90, 1, 0)\nlabel_opafy23$angle <-ifelse(angle < -90, angle+180, angle)\n\n\n\n\nbase_opafy23 <- opafy23 |>  \n  group_by(REGIONF)|> \n  summarize(start=min(id)-2, end=max(id) - 4) |> \n  rowwise() |> \n  mutate(title=mean(c(start, end)))\n\nanglesgroup <- data.frame(REGIONF = c(\"Caribbean\", \"Midwest\", \"Northeast\",\"Pacific\", \"South\"),\n                          angle = c(85+270, 13.56+270, -78+90, 37+270, -30+90))\n\nbase_opafy23 <- base_opafy23 |> \n  right_join(anglesgroup, by = \"REGIONF\")\n\n\n\n\ngrid_data <- base_opafy23\ngrid_data$end <- grid_data$end[ c( nrow(grid_data), 1:nrow(grid_data)-1)] + 1\ngrid_data$start <- grid_data$start - 1\ngrid_data <- grid_data[-1,]\n\n\n\n\n\nplot <- ggplot(opafy23, aes(x=id, y=average_sentence, fill=REGIONF))+\n  geom_bar(stat=\"identity\")+\n  geom_segment(data=grid_data, aes(x = end, y = 9, xend = start, yend = 9), colour = \"black\", alpha=1, size=0.3 , inherit.aes = FALSE )+\n  geom_segment(data=grid_data, aes(x = end, y = 6, xend = start, yend = 6), colour = \"black\", alpha=1, size=0.3 , inherit.aes = FALSE )+\n  geom_segment(data=grid_data, aes(x = end, y = 3, xend = start, yend = 3), colour = \"black\", alpha=1, size=0.3 , inherit.aes = FALSE )+\n  annotate(\"text\", x = rep(min(opafy23$id)+3,3), y = c(3, 6, 9), label = c(\"3\", \"6\", \"9\") , color=\"black\", size=3 , angle=20, fontface=\"plain\", hjust=1) +\n  ylim(-10,12)+\n  coord_polar(start=0)+\n  geom_text(data=label_opafy23, aes(x=id, y=average_sentence+1, label=districtF, hjust=hjust), color=\"black\", fontface=\"bold\",alpha=0.6, size=1.8, angle= label_opafy23$angle, inherit.aes = FALSE )+\n  geom_text(data=base_opafy23, aes(x = title, y = -2.5, label=REGIONF), fontface=\"bold\", hjust=c(0.6,0.5,0.4,0.4,0.4), colour = \"black\", alpha=0.8, size=1.5, angle = base_opafy23$angle, fontface=\"bold\", inherit.aes = FALSE)+\n  #geom_textsegment(data=base_opafy23, aes(x= start, y =-2, xend =end, yend = -2, label = REGIONF), colour=\"black\", alpha=0.8, linewidth=0.6, size=2, inherit.aes=FALSE)+\n  geom_segment(data=base_opafy23, aes(x = start, y = -1, xend = end, yend = -1), colour = \"black\", alpha=0.8, linewidth=0.6 , inherit.aes = FALSE )+\n  labs(\n    title=\"Average Sentence of Tax Fraud by District/Region\",\n    subtitle=\"Data From Top 50 Districts by Max Sentence\"\n  )+\n  scale_fill_manual(values=c(\"#1b375d\", \"#5A708E\",\"#EEB4B3\", \"#971D2C\", \"#701C2B\"))+\n  theme_void(12)+\n  theme(\n    axis.text = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),      # Adjust the margin to make in sort labels are not truncated!\n    text=element_text(family=\"serif\"),\n    axis.ticks.y = element_blank(),\n    legend.position = \"none\"\n  ) \n \n\nplot\n```\n\n```{r Data Management for Page X, Graph 2}\noopafy23 <- fread(\"data/CSV2.csv\") |> \n  filter(OFFGUIDE == 16 | OFFGUIDE == 29, LOSS1 != 9999999997)|> \n  mutate(SENTYEARS = SENTTCAP / 12,\n         Agebin = factor(YEARS,\n                            levels <- c(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\",\"7\"),\n                            labels <- c(\"<21\",\"21-25\",\"26-30\",\"31-35\",\"36-40\",\"41-50\",\">50\")),\n         Education = factor(NEWEDUC,\n                            levels <- c(\"1\",\"3\",\"5\",\"6\"),\n                            labels <- c(\"Less Than H.S.\", \"H.S. Graduate\",\"Some College\",\"College Grad\"))\n         ) |>\n  group_by(Agebin, Education) |> \n  summarise(count = n(),\n            average_sentence = mean(SENTYEARS, na.rm=T),\n            average_loss = mean(LOSS1, na.rm=T)) |> \n  ungroup() |> \n  arrange(Education, desc(average_sentence)) |> \n  mutate(\n    id=seq(1:24)\n  )\neduc_group <- oopafy23 |> \n  arrange(desc(average_sentence))\n\neduc <- educ_group[[1,2]]\n\n\n\nempty_bar <- 3\nloss_to_add <- data.frame( matrix(NA, empty_bar*nlevels(oopafy23$Education), ncol(oopafy23)) )\ncolnames(loss_to_add) <- colnames(oopafy23)\nloss_to_add$Education <- rep(levels(oopafy23$Education), each=empty_bar)\noopafy23 <- rbind(oopafy23, loss_to_add)\n\n# extra_end <- data.frame(matrix(NA, 3, ncol(oopafy23)))\n# colnames(extra_end) <- colnames(oopafy23)\n# extra_end$Education <- \"Less Than H.S.\"\n# \n# oopafy23 <- rbind(oopafy23, extra_end)\n\noopafy23 <- oopafy23 |>  arrange(Education)\noopafy23$id <- seq(1, nrow(oopafy23))\n# oopafy23 <- oopafy23 |> \n#   slice(1:53)\n\n\n\n\n\nlabel_oopafy23 <- oopafy23\nonumber_of_bar <- nrow(label_oopafy23)\noangle <-  90 - 360 * (label_oopafy23$id-0.5) /onumber_of_bar\nlabel_oopafy23$hjust <-ifelse(oangle < -90, 1, 0)\nlabel_oopafy23$oangle <-ifelse(oangle < -90, oangle+180, oangle)\n\n\n\n\nbase_oopafy23 <- oopafy23 |>  \n  group_by(Education)|> \n  summarize(start=min(id), end=max(id)-3) |> \n  rowwise() |> \n  mutate(title=mean(c(start, end)))\n\noanglesgroup <- data.frame(Education = c(\"Less Than H.S.\", \"H.S. Graduate\", \"Some College\",\"College Grad\"),\n                          oangle = c(55+270, -40+90, 50-90, -35+90))\n\nbase_oopafy23 <- base_oopafy23 |> \n   right_join(oanglesgroup, by = \"Education\")\n\n\n\n\n\nogrid_data <- base_oopafy23\nogrid_data$end <- ogrid_data$end[ c( nrow(ogrid_data), 1:nrow(ogrid_data)-1)] +1\nogrid_data$start <- ogrid_data$start-1\n# ogrid_data[1,2] = -5\n# ogrid_data[1,3] = -2\nogrid_data <- ogrid_data[-1,]\n\n\n\n\nplot <- ggplot(oopafy23, aes(x=id, y=average_sentence, fill=Education))+\n  geom_bar(stat=\"identity\")+\n  geom_segment(data=ogrid_data, aes(x = end, y = 6, xend = start, yend = 6), colour = \"black\", alpha=1, size=0. , inherit.aes = FALSE )+\n  geom_segment(data=ogrid_data, aes(x = end, y = 4, xend = start, yend = 4), colour = \"black\", alpha=1, size=0.3 , inherit.aes = FALSE )+\n  geom_segment(data=ogrid_data, aes(x = end, y = 2, xend = start, yend = 2), colour = \"black\", alpha=1, size=0.3 , inherit.aes = FALSE )+\n  annotate(\"text\", x = rep(min(oopafy23$id)-1,3), y = c(2, 4, 6), label = c(\"2\", \"4\", \"6\") , color=\"black\", size=3, fontface=\"plain\", hjust=1) +\n  geom_bar(stat=\"identity\")+\n  ylim(-7, 8)+\n  coord_polar(start=0)+\n  geom_text(data=label_oopafy23, aes(x=id, y=average_sentence+.5, label=Agebin, hjust=hjust), color=\"black\", fontface=\"bold\",alpha=0.6, size=1.8, angle= label_oopafy23$oangle, inherit.aes = FALSE )+\n  geom_textsegment(data=base_oopafy23, aes(x= start, y =-1, xend =end, yend = -1, label = Education), colour=\"black\", alpha=0.8, linewidth=0, size=2, inherit.aes=FALSE)+\n # geom_segment(data=base_oopafy23, aes(x = start, y = -.5, xend = end, yend = -.5), colour = \"black\", alpha=0.8, linewidth=0.6 , inherit.aes = FALSE)+\n  labs(\n    title=\"Average Sentence of Tax Fraud by Age\",\n    subtitle=\"Grouped by Amount of Education\"\n  )+\n  scale_fill_manual(values=c(\"#1b375d\", \"#5A708E\",\"#EEB4B3\", \"#971D2C\"))+\n  theme_void(12)+\n  theme(\n    axis.text = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),      # Adjust the margin to make in sort labels are not truncated!\n    text=element_text(family=\"serif\"),\n    axis.ticks.y = element_blank(),\n    legend.position=\"none\"\n  ) \n \n#angle = base_oopafy23$oangle\n# (data=base_oopafy23, aes(x = title, y = -1.8, label=Education), fontface=\"bold\", hjust=c(0.5,0.5,0.5,0.5), colour = \"black\", alpha=0.8, # size=2, fontface=\"plain\", inherit.aes = FALSE)\nplot\n```\n\n## Row {height=25%}\n\n### Column\n\nThe length of sentence isn't necessarily correlated by district median income. East Washington and Connecticut had the greatest average sentence. For further analysis, average sentence should take population of districts into account. \n\nQuestion: What district in the U.S. gets most heavily sentenced?\n\n### Column\n\nThe longest sentence is held by individuals with `r educ` education, between the ages of 31-35. Among sentenced individuals who graduated college, the longest sentence is held by the age group 26-30, likely right out of college. \n\nQuestion: What age group has, on average, the greatest sentence for tax fraud? What is this group's education?\n\n# Criminal Investigation by Status or Disposition\n\n## Row {height = 10%}\n\nThis page focuses on data from the SOI Tax Stats – Criminal Investigation Program, by Status or Disposition from 2010 to 2023. The first waffle chart displays raw counts, showing the total number of IRS CI actions over time. This shows the true volume and scale of enforcement activity to show which years had more investigative or prosecutorial effort. The second waffle chart presents percent-of-year data that compares the proportion of each case disposition within a given year. This shows shifts in the types of actions pursued, such as increases in incarcerations or declines in prosecutions, regardless of overall volume.\n\nQuestion: How has conviction, incarceration, or prosecution rates from the IRS changed over time?\n\n## Row {height = 75%}\n\n```{r}\nfile_paths <- list(\n  \"2010\" = \"data/data/10db18ci.xls\",\n  \"2011\" = \"data/data/11db18ci.xls\",\n  \"2012\" = \"data/data/12db18ci.xls\",\n  \"2013\" = \"data/data/13db18ci.xls\",\n  \"2014\" = \"data/data/14db18ci.xls\",\n  \"2015\" = \"data/data/15db18ci.xls\",\n  \"2016\" = \"data/data/16db18aci.xls\",\n  \"2017\" = \"data/data/17db18ci.xls\",\n  \"2018\" = \"data/data/18db18ci.xls\",\n  \"2019\" = \"data/data/19dbs03t24ci.xlsx\",\n  \"2020\" = \"data/data/20dbs03t24ci.xlsx\",\n  \"2021\" = \"data/data/21dbs03t24ci.xlsx\",\n  \"2022\" = \"data/data/22dbs03t24ci.xlsx\",\n  \"2023\" = \"data/data/23dbs03t26ci.xlsx\"\n)\n\n\ntarget_rows <- c(\n  \"investigations initiated\",\n  \"investigations completed\",\n  \"referrals for prosecution\",\n  \"indictments and informations\",\n  \"convictions\",\n  \"sentenced\",\n  \"incarcerated\",\n  \"percentage of those sentenced who were incarcerated\"\n)\n\nclean_colnames <- c(\n  \"Status or disposition\", \n  \"Total\", \n  \"Legal source tax crimes\", \n  \"Illegal source financial crimes\", \n  \"Narcotics-related financial crimes\"\n)\n\nread_and_clean_file <- function(path, year) {\n  tryCatch({\n    df <- read_excel(path, skip = 2, col_names = FALSE)\n\ndf <- df %>%\n  mutate(row_key = str_squish(str_replace_all(tolower(as.character(...1)), \"[\\r\\n]\", \" \"))) %>%\n  filter(str_detect(row_key, paste0(\"\\\\b(\", paste(target_rows, collapse = \"|\"), \")\\\\b\"))) %>%\n  select(1:5) %>%\n  mutate(across(everything(), as.character)) %>%\n  mutate(\n    `Status or disposition` = str_trim(gsub(\"\\\\[.*?\\\\]\", \"\", ...1)),\n    `Total` = ...2,\n    `Legal source tax crimes` = ...3,\n    `Illegal source financial crimes` = ...4,\n    `Narcotics-related financial crimes` = ...5) %>%\n  select(all_of(clean_colnames)) %>%\n  mutate(across(-`Status or disposition`, ~ as.numeric(gsub(\",\", \"\", .))),\n         Year = as.integer(year)) %>%\n  filter(if_any(c(\"Total\", \n                  \"Legal source tax crimes\", \n                  \"Illegal source financial crimes\", \n                  \"Narcotics-related financial crimes\"), ~ !is.na(.)))}, \nerror = function(e) {\n  message(paste(\"Skipping file:\", path, \"| Error:\", e$message))\n  return(NULL)\n  })\n}\n\nci_data <- imap_dfr(file_paths, read_and_clean_file)\n\nwrite.csv(ci_data, \"data/combined_CI_2010_2023.csv\", row.names = FALSE)\n```\n\n```{r}\n#| fig.width: 12\n#| fig.asp: 0.9\n\nplot_data <- ci_data %>%\n  filter(!is.na(Year)) %>%\n  mutate(`Status or disposition` = case_when(\n    str_detect(`Status or disposition`, regex(\"indictments?\\\\s+and\\\\s+informations?\", ignore_case = TRUE)) ~ \"Indictments and Informations\",\n    TRUE ~ `Status or disposition`\n  )) %>%\n  group_by(Year, `Status or disposition`) %>%\n  summarise(\n    Total = sum(Total, na.rm = TRUE),\n    Legal = sum(`Legal source tax crimes`, na.rm = TRUE),\n    Illegal = sum(`Illegal source financial crimes`, na.rm = TRUE),\n    Narcotics = sum(`Narcotics-related financial crimes`, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\nmake_column_trace <- function(value_col) {\n  lapply(unique(plot_data$`Status or disposition`), function(status) {\n    sub <- plot_data %>% filter(`Status or disposition` == status)\n    list(\n      x = sub[[value_col]],\n      y = sub$Year,\n      name = status,\n      type = 'bar',\n      orientation = 'h',\n      hoverinfo = 'text',\n      text = paste0(\n        \"Year: \", sub$Year,\n        \"<br>Status: \", status,\n        \"<br>\", value_col, \": \", sub[[value_col]]\n      ),\n      textposition = \"none\",  \n      visible = TRUE\n    )\n  })\n}\n\ncolumns <- c(\"Total\", \"Legal\", \"Illegal\", \"Narcotics\")\nall_traces <- lapply(columns, make_column_trace)\n\ntraces_flat <- unlist(all_traces, recursive = FALSE)\nvisible_flags <- rep(FALSE, length(traces_flat))\nvisible_flags[1:length(all_traces[[1]])] <- TRUE \n\nfig <- plot_ly()\n\nfor (i in seq_along(traces_flat)) {\n  t <- traces_flat[[i]]\n  fig <- fig %>%\n    add_trace(\n      x = t$x,\n      y = t$y,\n      name = t$name,\n      type = t$type,\n      orientation = t$orientation,\n      hoverinfo = t$hoverinfo,\n      text = t$text,\n      textposition = t$textposition,\n      visible = visible_flags[i],\n      showlegend = TRUE\n    )\n}\n\ndropdown_buttons <- lapply(seq_along(columns), function(i) {\n  vis <- rep(FALSE, length(traces_flat))\n  idx <- ((i - 1) * length(all_traces[[1]]) + 1):(i * length(all_traces[[1]]))\n  vis[idx] <- TRUE\n  list(\n    method = \"update\",\n    args = list(list(visible = vis)),\n    label = columns[i]\n  )\n})\n\nfig <- fig %>%\n  layout(\n    title = list(\n      text = \"CI by Year Raw Count\",\n      x = 0.5\n    ),\n    barmode = \"stack\",\n    yaxis = list(title = \"Year\", type = \"category\", autorange = \"reversed\"),\n    xaxis = list(\n      title = \"Number of Cases\",\n      range = c(0, 3000)  \n    ),\n    updatemenus = list(\n      list(\n        buttons = dropdown_buttons,\n        direction = \"down\",\n        showactive = TRUE,\n        x = 0.05,\n        xanchor = \"left\",\n        y = 1.15,\n        yanchor = \"top\"\n      )\n    ),\n    colorway = c(\"#1B375D\", \"#EEB4B3\", \"#701C2B\", \"#32496E\", \"#495B80\", \"#616E92\", \"#7A819F\",\"#8395AF\", \"#DD6B69\", \"#C6526A\", \"#971D2C\")\n  )\n\nfig\n```\n\n```{r}\n#| fig.width: 12\n#| fig.asp: 0.9\n\nplot_data <- ci_data %>%\n  filter(!is.na(Year)) %>%\n  mutate(`Status or disposition` = case_when(\n    str_detect(`Status or disposition`, regex(\"indictments?\\\\s+and\\\\s+informations?\", ignore_case = TRUE)) ~ \"Indictments and Informations\",\n    TRUE ~ `Status or disposition`\n  )) %>%\n  group_by(Year, `Status or disposition`) %>%\n  summarise(\n    Total = sum(Total, na.rm = TRUE),\n    Legal = sum(`Legal source tax crimes`, na.rm = TRUE),\n    Illegal = sum(`Illegal source financial crimes`, na.rm = TRUE),\n    Narcotics = sum(`Narcotics-related financial crimes`, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\nnormalize_column <- function(df, column) {\n  df %>%\n    group_by(Year) %>%\n    mutate(pct = !!sym(column) / sum(!!sym(column), na.rm = TRUE) * 100) %>%\n    ungroup()\n}\n\nmake_percent_trace <- function(column_name) {\n  df <- normalize_column(plot_data, column_name)\n  lapply(unique(df$`Status or disposition`), function(status) {\n    sub <- df %>% filter(`Status or disposition` == status)\n    list(\n      x = sub$pct,\n      y = sub$Year,\n      name = status,\n      type = 'bar',\n      orientation = 'h',\n      hoverinfo = 'text',\n      text = paste0(\n        \"Year: \", sub$Year,\n        \"<br>Status: \", status,\n        \"<br>\", column_name, \": \", round(sub$pct, 1), \"%\"\n      ),\n      textposition = \"none\",\n      visible = TRUE\n    )\n  })\n}\n\ncolumns <- c(\"Total\", \"Legal\", \"Illegal\", \"Narcotics\")\nall_traces <- lapply(columns, make_percent_trace)\n\ntraces_flat <- unlist(all_traces, recursive = FALSE)\nvisible_flags <- rep(FALSE, length(traces_flat))\nvisible_flags[1:length(all_traces[[1]])] <- TRUE  \n\nfig <- plot_ly()\n\nfor (i in seq_along(traces_flat)) {\n  t <- traces_flat[[i]]\n  fig <- fig %>%\n    add_trace(\n      x = t$x,\n      y = t$y,\n      name = t$name,\n      type = t$type,\n      orientation = t$orientation,\n      hoverinfo = t$hoverinfo,\n      text = t$text,\n      textposition = t$textposition,\n      visible = visible_flags[i],\n      showlegend = TRUE\n    )\n}\n\ndropdown_buttons <- lapply(seq_along(columns), function(i) {\n  vis <- rep(FALSE, length(traces_flat))\n  vis[((i - 1) * length(all_traces[[1]]) + 1):(i * length(all_traces[[1]]))] <- TRUE\n  list(\n    method = \"update\",\n    args = list(list(visible = vis)),\n    label = columns[i]\n  )\n})\n\nfig <- fig %>%\n  layout(\n    title = list(\n      text = \"CI by Percent-of-year\",\n      x = 0.5\n    ),\n    barmode = \"stack\",\n    yaxis = list(title = \"Year\", type = \"category\", autorange = \"reversed\"),\n    xaxis = list(\n      title = \"Percentage of Cases per Year\",\n      range = c(0, 100)\n    ),\n    updatemenus = list(\n      list(\n        buttons = dropdown_buttons,\n        direction = \"down\",\n        showactive = TRUE,\n        x = 0.05,\n        xanchor = \"left\",\n        y = 1.15,\n        yanchor = \"top\"\n      )\n    ),\n    colorway = c(\"#1B375D\", \"#EEB4B3\", \"#701C2B\", \"#32496E\", \"#495B80\", \"#616E92\", \"#7A819F\",\"#8395AF\", \"#DD6B69\", \"#C6526A\", \"#971D2C\")\n  )\n\nfig\n```\n\n\n# About\n\n## Row {height = 15%}\n\n- This dashboard was created using [Quarto](https://quarto.org/) in [RStudio](https://posit.co/), and the [R Language and Environment](https://cran.r-project.org/).\n\n- The datasets used to create this dashboard was downloaded from:\n\n[Quarterly Sentencing Updates](https://www.ussc.gov/research/data-reports/quarter/quarterly-sentencing-updates),\n[2024 Federal Sentence Statistics](https://www.ussc.gov/research/data-reports/geography/2024-federal-sentencing-statistics),\n[Commission Datafiles](https://www.ussc.gov/research/datafiles/commission-datafiles)\n\n## Row {height = 75%}\nSoftware Citations include:\n\nArnold J (2024). _ggthemes: Extra Themes, Scales and Geoms for 'ggplot2'_. R package version 5.1.0, <https://CRAN.R-project.org/package=ggthemes>.\n\nBache S, Wickham H (2022). _magrittr: A Forward-Pipe Operator for R_. R package version 2.0.3, <https://CRAN.R-project.org/package=magrittr>\n\nBarrett T, Dowle M, Srinivasan A, Gorecki J, Chirico M, Hocking T, Schwendinger B (2024). _data.table: Extension of `data.frame`_. R package version 1.16.4, <https://CRAN.R-project.org/package=data.table>..\n\nCameron A, van den Brand T (2025). _geomtextpath: Curved Text in 'ggplot2'_. R package version 0.1.5,\n  <https://CRAN.R-project.org/package=geomtextpath>.\n\nC. Sievert. Interactive Web-Based Data Visualization with R, plotly, and shiny. Chapman and\n  Hall/CRC Florida, 2020.\n\nDancho M, Vaughan D (2025). _tidyquant: Tidy Quantitative Financial Analysis_. R package version 1.0.11, <https://CRAN.R-project.org/package=tidyquant>.\n\nFirke S (2024). _janitor: Simple Tools for Examining and Cleaning Dirty Data_. R package version 2.2.1,<https://CRAN.R-project.org/package=janitor>.\n\nNeuwirth E (2022). _RColorBrewer: ColorBrewer Palettes_. R package version 1.1-3, <https://CRAN.R-project.org/package=RColorBrewer>.\n\nRinker, T. W. & Kurkiewicz, D. (2017). pacman: Package Management for R. version 0.5.0. Buffalo, New York. http://github.com/trinker/pacman\n\n\nKunst J (2022). _highcharter: A Wrapper for the 'Highcharts' Library_. R package version 0.9.4,\n  <https://CRAN.R-project.org/package=highcharter>.\n\nOoms J (2024). _js: Tools for Working with JavaScript in R_. R package version 1.2.1,\n  <https://CRAN.R-project.org/package=js>.\n\nWickham H (2023). _stringr: Simple, Consistent Wrappers for Common String Operations_. R package version 1.5.1, <https://CRAN.R-project.org/package=stringr>.\n\nWickham H, Averick M, Bryan J, Chang W, McGowan LD, François R, Grolemund G, Hayes A, Henry L, Hester J, Kuhn M,Pedersen TL, Miller E, Bache SM, Müller K, Ooms J, Robinson D, Seidel DP, Spinu V, Takahashi K, Vaughan D, Wilke C, Woo K, Yutani H (2019). “Welcome to the tidyverse.” _Journal of Open Source Software_, *4*(43), 1686. doi:10.21105/joss.01686 <https://doi.org/10.21105/joss.01686>.\n\nWickham H, François R, Henry L, Müller K, Vaughan D (2023). _dplyr: A Grammar of Data Manipulation_. R package version 1.1.4, <https://CRAN.R-project.org/package=dplyr>.\n\nWickham H, Henry L (2023). _purrr: Functional Programming Tools_. R package version 1.0.2,\n  <https://CRAN.R-project.org/package=purrr>.\n\nWickham H, Bryan J (2023). _readxl: Read Excel Files_. R package version 1.4.3,\n  <https://CRAN.R-project.org/package=readxl>.\n\nWickham H, Hester J, Bryan J (2024). _readr: Read Rectangular Text Data_. R package version 2.1.5, <https://CRAN.R-project.org/package=readr>.\n\nZhu H (2024). _kableExtra: Construct Complex Table with 'kable' and Pipe Syntax_. R package\n  version 1.4.0, <https://CRAN.R-project.org/package=kableExtra>.\n\nWickham H, Bryan J (2025). _readxl: Read Excel Files_. R package version 1.4.5,\n  <https://CRAN.R-project.org/package=readxl>. \n\nC. Sievert. Interactive Web-Based Data Visualization with R, plotly, and shiny. Chapman and\n  Hall/CRC Florida, 2020. <https://plotly-r.com> \n\n<script>\n  // Create an audio object for the bald eagle sound\n  const eagleSound = new Audio('assets/eagle.mp3');\n\n  // Function to play the sound\n  function playEagleSound() {\n    eagleSound.play();\n  }\n\n  // Event listener for page changes\n  document.addEventListener('DOMContentLoaded', () => {\n    // Trigger sound when the page loads or changes\n    playEagleSound();\n\n    // Optional: Detect navigation within single-page apps or dashboards\n    document.querySelectorAll('a').forEach(link => {\n      link.addEventListener('click', () => {\n        setTimeout(playEagleSound, 500); // Play sound after navigating\n      });\n    });\n  });\n</script>\n\n\n<!-- Embed audio element -->\n<script>\n  // Create an audio object for the song\n  const aboutSong = new Audio('assets/fergie.mp3');\n\n  // Function to play the song\n  function playAboutSong() {\n    aboutSong.currentTime = 0; // Reset song to the beginning\n    aboutSong.play(); // Play the song\n  }\n\n  // Event listener to detect page navigation\n  document.addEventListener('DOMContentLoaded', () => {\n    document.querySelectorAll('a').forEach(link => {\n      link.addEventListener('click', () => {\n        // Check if the link corresponds to the \"About\" slide\n        const slideName = link.getAttribute('href'); // Get the linked page\n        if (slideName && slideName.toLowerCase().includes('about')) {\n          setTimeout(playAboutSong, 500); // Play the song after navigation\n        }\n      });\n    });\n  });\n</script>\n"},"formats":{"dashboard":{"identifier":{"display-name":"HTML","target-format":"dashboard","base-format":"dashboard"},"execute":{"fig-width":8,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":"all","plotly-connected":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"Group 4 Dashboard.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.40","page-layout":"custom","editor":"source","title":"USSC Dashboard","logo":"img/seal.png","theme":"custom.scss"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}